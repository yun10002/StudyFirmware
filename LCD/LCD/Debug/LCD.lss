
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00000916  000009aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000916  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800134  00800134  000009de  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010f8  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a28  00000000  00000000  00001bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000673  00000000  00000000  0000261c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f4  00000000  00000000  00002c90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000479  00000000  00000000  00002d84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000616  00000000  00000000  000031fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003813  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	d8 c0       	rjmp	.+432    	; 0x1ca <__vector_6>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e1       	ldi	r30, 0x16	; 22
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 33       	cpi	r26, 0x34	; 52
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e3       	ldi	r26, 0x34	; 52
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 33       	cpi	r26, 0x35	; 53
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	9a d0       	rcall	.+308    	; 0x1f8 <main>
  c4:	26 c4       	rjmp	.+2124   	; 0x912 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Lcd_Data>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	98 b3       	in	r25, 0x18	; 24
  ca:	91 60       	ori	r25, 0x01	; 1
  cc:	98 bb       	out	0x18, r25	; 24
  ce:	98 b3       	in	r25, 0x18	; 24
  d0:	9d 7f       	andi	r25, 0xFD	; 253
  d2:	98 bb       	out	0x18, r25	; 24
  d4:	98 b3       	in	r25, 0x18	; 24
  d6:	94 60       	ori	r25, 0x04	; 4
  d8:	98 bb       	out	0x18, r25	; 24
  da:	90 e1       	ldi	r25, 0x10	; 16
  dc:	9a 95       	dec	r25
  de:	f1 f7       	brne	.-4      	; 0xdc <Lcd_Data+0x14>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <Lcd_Data+0x1a>
  e2:	85 bb       	out	0x15, r24	; 21
  e4:	80 e1       	ldi	r24, 0x10	; 16
  e6:	8a 95       	dec	r24
  e8:	f1 f7       	brne	.-4      	; 0xe6 <Lcd_Data+0x1e>
  ea:	00 c0       	rjmp	.+0      	; 0xec <Lcd_Data+0x24>
  ec:	88 b3       	in	r24, 0x18	; 24
  ee:	8b 7f       	andi	r24, 0xFB	; 251
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	08 95       	ret

000000f4 <Lcd_Cmd>:
  f4:	98 b3       	in	r25, 0x18	; 24
  f6:	9e 7f       	andi	r25, 0xFE	; 254
  f8:	98 bb       	out	0x18, r25	; 24
  fa:	98 b3       	in	r25, 0x18	; 24
  fc:	9d 7f       	andi	r25, 0xFD	; 253
  fe:	98 bb       	out	0x18, r25	; 24
 100:	98 b3       	in	r25, 0x18	; 24
 102:	94 60       	ori	r25, 0x04	; 4
 104:	98 bb       	out	0x18, r25	; 24
 106:	90 e1       	ldi	r25, 0x10	; 16
 108:	9a 95       	dec	r25
 10a:	f1 f7       	brne	.-4      	; 0x108 <Lcd_Cmd+0x14>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <Lcd_Cmd+0x1a>
 10e:	85 bb       	out	0x15, r24	; 21
 110:	80 e1       	ldi	r24, 0x10	; 16
 112:	8a 95       	dec	r24
 114:	f1 f7       	brne	.-4      	; 0x112 <Lcd_Cmd+0x1e>
 116:	00 c0       	rjmp	.+0      	; 0x118 <Lcd_Cmd+0x24>
 118:	88 b3       	in	r24, 0x18	; 24
 11a:	8b 7f       	andi	r24, 0xFB	; 251
 11c:	88 bb       	out	0x18, r24	; 24
 11e:	08 95       	ret

00000120 <Lcd_CHAR>:
 120:	d3 df       	rcall	.-90     	; 0xc8 <Lcd_Data>
 122:	89 ef       	ldi	r24, 0xF9	; 249
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <Lcd_CHAR+0x6>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <Lcd_CHAR+0xc>
 12c:	00 00       	nop
 12e:	08 95       	ret

00000130 <Lcd_STR>:
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	ec 01       	movw	r28, r24
 136:	02 c0       	rjmp	.+4      	; 0x13c <Lcd_STR+0xc>
 138:	f3 df       	rcall	.-26     	; 0x120 <Lcd_CHAR>
 13a:	21 96       	adiw	r28, 0x01	; 1
 13c:	88 81       	ld	r24, Y
 13e:	81 11       	cpse	r24, r1
 140:	fb cf       	rjmp	.-10     	; 0x138 <Lcd_STR+0x8>
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	08 95       	ret

00000148 <Lcd_Pos>:
 148:	90 e4       	ldi	r25, 0x40	; 64
 14a:	89 9f       	mul	r24, r25
 14c:	60 0d       	add	r22, r0
 14e:	11 24       	eor	r1, r1
 150:	86 2f       	mov	r24, r22
 152:	80 68       	ori	r24, 0x80	; 128
 154:	cf df       	rcall	.-98     	; 0xf4 <Lcd_Cmd>
 156:	81 ee       	ldi	r24, 0xE1	; 225
 158:	94 e0       	ldi	r25, 0x04	; 4
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <Lcd_Pos+0x12>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <Lcd_Pos+0x18>
 160:	00 00       	nop
 162:	08 95       	ret

00000164 <Lcd_Clear>:
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	c6 df       	rcall	.-116    	; 0xf4 <Lcd_Cmd>
 168:	83 ec       	ldi	r24, 0xC3	; 195
 16a:	99 e0       	ldi	r25, 0x09	; 9
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <Lcd_Clear+0x8>
 170:	00 c0       	rjmp	.+0      	; 0x172 <Lcd_Clear+0xe>
 172:	00 00       	nop
 174:	08 95       	ret

00000176 <Lcd_Init>:
	}
}

void Lcd_Init(void)
{
	Lcd_Cmd(0x38);
 176:	88 e3       	ldi	r24, 0x38	; 56
 178:	bd df       	rcall	.-134    	; 0xf4 <Lcd_Cmd>
 17a:	83 ef       	ldi	r24, 0xF3	; 243
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	01 97       	sbiw	r24, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <Lcd_Init+0x8>
 182:	00 c0       	rjmp	.+0      	; 0x184 <Lcd_Init+0xe>
 184:	00 00       	nop
	_delay_ms(2);	//명령어를 IR에 쓰고나면 40us 또는 1.64ms을 기다림.
	Lcd_Cmd(0x38);
 186:	88 e3       	ldi	r24, 0x38	; 56
 188:	b5 df       	rcall	.-150    	; 0xf4 <Lcd_Cmd>
 18a:	83 ef       	ldi	r24, 0xF3	; 243
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <Lcd_Init+0x18>
 192:	00 c0       	rjmp	.+0      	; 0x194 <Lcd_Init+0x1e>
	_delay_ms(2);
	Lcd_Cmd(0x38);
 194:	00 00       	nop
 196:	88 e3       	ldi	r24, 0x38	; 56
 198:	ad df       	rcall	.-166    	; 0xf4 <Lcd_Cmd>
 19a:	83 ef       	ldi	r24, 0xF3	; 243
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <Lcd_Init+0x28>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <Lcd_Init+0x2e>
	_delay_ms(2);
	Lcd_Cmd(0x0c);
 1a4:	00 00       	nop
 1a6:	8c e0       	ldi	r24, 0x0C	; 12
 1a8:	a5 df       	rcall	.-182    	; 0xf4 <Lcd_Cmd>
 1aa:	83 ef       	ldi	r24, 0xF3	; 243
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <Lcd_Init+0x38>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <Lcd_Init+0x3e>
	_delay_ms(2);
	Lcd_Cmd(0x06);
 1b4:	00 00       	nop
 1b6:	86 e0       	ldi	r24, 0x06	; 6
 1b8:	9d df       	rcall	.-198    	; 0xf4 <Lcd_Cmd>
 1ba:	83 ef       	ldi	r24, 0xF3	; 243
 1bc:	91 e0       	ldi	r25, 0x01	; 1
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <Lcd_Init+0x48>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <Lcd_Init+0x4e>
	_delay_ms(2);
	Lcd_Clear();
 1c4:	00 00       	nop
 1c6:	ce cf       	rjmp	.-100    	; 0x164 <Lcd_Clear>
 1c8:	08 95       	ret

000001ca <__vector_6>:
//}

/*구구단 출력 중 인터럽트 발생시 LCD에 알림*/
volatile unsigned char occured = 0;

SIGNAL(INT5_vect){
 1ca:	1f 92       	push	r1
 1cc:	0f 92       	push	r0
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	0f 92       	push	r0
 1d2:	11 24       	eor	r1, r1
 1d4:	8f 93       	push	r24
	cli();
 1d6:	f8 94       	cli

	if(occured == 0) occured=1;
 1d8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
 1dc:	81 11       	cpse	r24, r1
 1de:	04 c0       	rjmp	.+8      	; 0x1e8 <__vector_6+0x1e>
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end>
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <__vector_6+0x22>
	else occured=0;
 1e8:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__data_end>
	
	//sei();
}
 1ec:	8f 91       	pop	r24
 1ee:	0f 90       	pop	r0
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	0f 90       	pop	r0
 1f4:	1f 90       	pop	r1
 1f6:	18 95       	reti

000001f8 <main>:

int main(){
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	cd b7       	in	r28, 0x3d	; 61
 1fe:	de b7       	in	r29, 0x3e	; 62
 200:	e0 97       	sbiw	r28, 0x30	; 48
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	de bf       	out	0x3e, r29	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	cd bf       	out	0x3d, r28	; 61
	DDRE = 0x00; //E를 입력포트
 20c:	12 b8       	out	0x02, r1	; 2
	DDRA = 0xff; //A를 출력포트로 사용
 20e:	8f ef       	ldi	r24, 0xFF	; 255
 210:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xff; //B도 출력포트!
 212:	87 bb       	out	0x17, r24	; 23
	
	EICRB = 0x0c; //INT5 상승에지에서 동작하도록 설정
 214:	8c e0       	ldi	r24, 0x0C	; 12
 216:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 1 << INT5; //0x20; //INT5 허용
 218:	80 e2       	ldi	r24, 0x20	; 32
 21a:	89 bf       	out	0x39, r24	; 57
	EIFR = 0x20;  //INT5 플래그 클리어
 21c:	88 bf       	out	0x38, r24	; 56
	sei();	
 21e:	78 94       	sei

	Byte dan[16] = {0,};
 220:	80 e1       	ldi	r24, 0x10	; 16
 222:	fe 01       	movw	r30, r28
 224:	31 96       	adiw	r30, 0x01	; 1
 226:	df 01       	movw	r26, r30
 228:	28 2f       	mov	r18, r24
 22a:	1d 92       	st	X+, r1
 22c:	2a 95       	dec	r18
 22e:	e9 f7       	brne	.-6      	; 0x22a <main+0x32>
	Byte gugu[16] = {0,};
 230:	70 96       	adiw	r30, 0x10	; 16
 232:	df 01       	movw	r26, r30
 234:	28 2f       	mov	r18, r24
 236:	1d 92       	st	X+, r1
 238:	2a 95       	dec	r18
 23a:	e9 f7       	brne	.-6      	; 0x236 <main+0x3e>
	Byte gugudan[16] = {0,};
 23c:	70 96       	adiw	r30, 0x10	; 16
 23e:	df 01       	movw	r26, r30
 240:	1d 92       	st	X+, r1
 242:	8a 95       	dec	r24
 244:	e9 f7       	brne	.-6      	; 0x240 <main+0x48>

	
	Lcd_Init();
 246:	97 df       	rcall	.-210    	; 0x176 <Lcd_Init>
	Lcd_Clear();
 248:	8d df       	rcall	.-230    	; 0x164 <Lcd_Clear>
 24a:	bf ef       	ldi	r27, 0xFF	; 255
 24c:	2f e7       	ldi	r18, 0x7F	; 127
 24e:	86 e1       	ldi	r24, 0x16	; 22
 250:	b1 50       	subi	r27, 0x01	; 1
 252:	20 40       	sbci	r18, 0x00	; 0
 254:	80 40       	sbci	r24, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <main+0x58>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x62>
 25a:	00 00       	nop
 25c:	60 e0       	ldi	r22, 0x00	; 0
	_delay_ms(1000);
	while(1){
		Lcd_Pos(0, 0);
 25e:	80 e0       	ldi	r24, 0x00	; 0
 260:	73 df       	rcall	.-282    	; 0x148 <Lcd_Pos>
 262:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end>
		if(occured==0) {
 266:	81 11       	cpse	r24, r1
 268:	6e c0       	rjmp	.+220    	; 0x346 <main+0x14e>
			Lcd_Clear();
 26a:	7c df       	rcall	.-264    	; 0x164 <Lcd_Clear>
 26c:	af ef       	ldi	r26, 0xFF	; 255
 26e:	b7 e4       	ldi	r27, 0x47	; 71
 270:	11 97       	sbiw	r26, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0x78>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0x7e>
 276:	00 00       	nop
			_delay_ms(10);
			Lcd_STR("GUGUDAN");
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	91 e0       	ldi	r25, 0x01	; 1
 27c:	59 df       	rcall	.-334    	; 0x130 <Lcd_STR>
 27e:	68 94       	set
			for(int i = 2; i < 10; i++){
 280:	cc 24       	eor	r12, r12
 282:	c1 f8       	bld	r12, 1
 284:	d1 2c       	mov	r13, r1
 286:	59 c0       	rjmp	.+178    	; 0x33a <main+0x142>
 288:	df 92       	push	r13
				sprintf(dan, "%dDan ", i);
 28a:	cf 92       	push	r12
 28c:	88 e0       	ldi	r24, 0x08	; 8
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	9f 93       	push	r25
 292:	8f 93       	push	r24
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	9f 93       	push	r25
 29a:	8f 93       	push	r24
 29c:	5f d0       	rcall	.+190    	; 0x35c <sprintf>
 29e:	0f 90       	pop	r0
				for(int j = 1; j < 10; j++){
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	0f 90       	pop	r0
 2aa:	01 e0       	ldi	r16, 0x01	; 1
 2ac:	10 e0       	ldi	r17, 0x00	; 0
 2ae:	3e c0       	rjmp	.+124    	; 0x32c <main+0x134>
 2b0:	c0 9e       	mul	r12, r16
					sprintf(gugu, "%dX%d=%d", i, j , i*j);
 2b2:	c0 01       	movw	r24, r0
 2b4:	c1 9e       	mul	r12, r17
 2b6:	90 0d       	add	r25, r0
 2b8:	d0 9e       	mul	r13, r16
 2ba:	90 0d       	add	r25, r0
 2bc:	11 24       	eor	r1, r1
 2be:	9f 93       	push	r25
 2c0:	8f 93       	push	r24
 2c2:	1f 93       	push	r17
 2c4:	0f 93       	push	r16
 2c6:	df 92       	push	r13
 2c8:	cf 92       	push	r12
 2ca:	8f e0       	ldi	r24, 0x0F	; 15
 2cc:	91 e0       	ldi	r25, 0x01	; 1
 2ce:	9f 93       	push	r25
 2d0:	8f 93       	push	r24
 2d2:	7e 01       	movw	r14, r28
 2d4:	b1 e1       	ldi	r27, 0x11	; 17
 2d6:	eb 0e       	add	r14, r27
 2d8:	f1 1c       	adc	r15, r1
 2da:	ff 92       	push	r15
 2dc:	ef 92       	push	r14
 2de:	3e d0       	rcall	.+124    	; 0x35c <sprintf>
 2e0:	ff 92       	push	r15
					sprintf(gugudan, "%s%s", dan, gugu);
 2e2:	ef 92       	push	r14
 2e4:	ce 01       	movw	r24, r28
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	9f 93       	push	r25
 2ea:	8f 93       	push	r24
 2ec:	88 e1       	ldi	r24, 0x18	; 24
 2ee:	91 e0       	ldi	r25, 0x01	; 1
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	7e 01       	movw	r14, r28
 2f6:	21 e2       	ldi	r18, 0x21	; 33
 2f8:	e2 0e       	add	r14, r18
 2fa:	f1 1c       	adc	r15, r1
 2fc:	ff 92       	push	r15
 2fe:	ef 92       	push	r14
					Lcd_Pos(1, 0);
 300:	2d d0       	rcall	.+90     	; 0x35c <sprintf>
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	20 df       	rcall	.-448    	; 0x148 <Lcd_Pos>
					Lcd_STR(gugudan);
 308:	c7 01       	movw	r24, r14
 30a:	12 df       	rcall	.-476    	; 0x130 <Lcd_STR>
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	9f e3       	ldi	r25, 0x3F	; 63
 310:	ab e0       	ldi	r26, 0x0B	; 11
 312:	81 50       	subi	r24, 0x01	; 1
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	a0 40       	sbci	r26, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0x11a>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x124>
 31c:	00 00       	nop
 31e:	0f 5f       	subi	r16, 0xFF	; 255
			Lcd_Clear();
			_delay_ms(10);
			Lcd_STR("GUGUDAN");
			for(int i = 2; i < 10; i++){
				sprintf(dan, "%dDan ", i);
				for(int j = 1; j < 10; j++){
 320:	1f 4f       	sbci	r17, 0xFF	; 255
 322:	0f b6       	in	r0, 0x3f	; 63
 324:	f8 94       	cli
 326:	de bf       	out	0x3e, r29	; 62
 328:	0f be       	out	0x3f, r0	; 63
 32a:	cd bf       	out	0x3d, r28	; 61
 32c:	0a 30       	cpi	r16, 0x0A	; 10
 32e:	11 05       	cpc	r17, r1
 330:	0c f4       	brge	.+2      	; 0x334 <main+0x13c>
 332:	be cf       	rjmp	.-132    	; 0x2b0 <main+0xb8>
		Lcd_Pos(0, 0);
		if(occured==0) {
			Lcd_Clear();
			_delay_ms(10);
			Lcd_STR("GUGUDAN");
			for(int i = 2; i < 10; i++){
 334:	9f ef       	ldi	r25, 0xFF	; 255
 336:	c9 1a       	sub	r12, r25
 338:	d9 0a       	sbc	r13, r25
 33a:	aa e0       	ldi	r26, 0x0A	; 10
 33c:	ca 16       	cp	r12, r26
 33e:	d1 04       	cpc	r13, r1
 340:	0c f4       	brge	.+2      	; 0x344 <main+0x14c>
					_delay_ms(500);
				}
			}
		}
		else{
			Lcd_Clear();
 342:	a2 cf       	rjmp	.-188    	; 0x288 <main+0x90>
 344:	8b cf       	rjmp	.-234    	; 0x25c <main+0x64>
			Lcd_STR("! INTERRUPT");
 346:	0e df       	rcall	.-484    	; 0x164 <Lcd_Clear>
 348:	8d e1       	ldi	r24, 0x1D	; 29
 34a:	91 e0       	ldi	r25, 0x01	; 1
 34c:	f1 de       	rcall	.-542    	; 0x130 <Lcd_STR>
			Lcd_Pos(1, 0);
 34e:	60 e0       	ldi	r22, 0x00	; 0
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	fa de       	rcall	.-524    	; 0x148 <Lcd_Pos>
 354:	89 e2       	ldi	r24, 0x29	; 41
			Lcd_STR("  OCCURED");
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	eb de       	rcall	.-554    	; 0x130 <Lcd_STR>
 35a:	80 cf       	rjmp	.-256    	; 0x25c <main+0x64>

0000035c <sprintf>:
 35c:	0f 93       	push	r16
 35e:	1f 93       	push	r17
 360:	cf 93       	push	r28
 362:	df 93       	push	r29
 364:	cd b7       	in	r28, 0x3d	; 61
 366:	de b7       	in	r29, 0x3e	; 62
 368:	2e 97       	sbiw	r28, 0x0e	; 14
 36a:	0f b6       	in	r0, 0x3f	; 63
 36c:	f8 94       	cli
 36e:	de bf       	out	0x3e, r29	; 62
 370:	0f be       	out	0x3f, r0	; 63
 372:	cd bf       	out	0x3d, r28	; 61
 374:	0d 89       	ldd	r16, Y+21	; 0x15
 376:	1e 89       	ldd	r17, Y+22	; 0x16
 378:	86 e0       	ldi	r24, 0x06	; 6
 37a:	8c 83       	std	Y+4, r24	; 0x04
 37c:	1a 83       	std	Y+2, r17	; 0x02
 37e:	09 83       	std	Y+1, r16	; 0x01
 380:	8f ef       	ldi	r24, 0xFF	; 255
 382:	9f e7       	ldi	r25, 0x7F	; 127
 384:	9e 83       	std	Y+6, r25	; 0x06
 386:	8d 83       	std	Y+5, r24	; 0x05
 388:	ae 01       	movw	r20, r28
 38a:	47 5e       	subi	r20, 0xE7	; 231
 38c:	5f 4f       	sbci	r21, 0xFF	; 255
 38e:	6f 89       	ldd	r22, Y+23	; 0x17
 390:	78 8d       	ldd	r23, Y+24	; 0x18
 392:	ce 01       	movw	r24, r28
 394:	01 96       	adiw	r24, 0x01	; 1
 396:	10 d0       	rcall	.+32     	; 0x3b8 <vfprintf>
 398:	ef 81       	ldd	r30, Y+7	; 0x07
 39a:	f8 85       	ldd	r31, Y+8	; 0x08
 39c:	e0 0f       	add	r30, r16
 39e:	f1 1f       	adc	r31, r17
 3a0:	10 82       	st	Z, r1
 3a2:	2e 96       	adiw	r28, 0x0e	; 14
 3a4:	0f b6       	in	r0, 0x3f	; 63
 3a6:	f8 94       	cli
 3a8:	de bf       	out	0x3e, r29	; 62
 3aa:	0f be       	out	0x3f, r0	; 63
 3ac:	cd bf       	out	0x3d, r28	; 61
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	1f 91       	pop	r17
 3b4:	0f 91       	pop	r16
 3b6:	08 95       	ret

000003b8 <vfprintf>:
 3b8:	2f 92       	push	r2
 3ba:	3f 92       	push	r3
 3bc:	4f 92       	push	r4
 3be:	5f 92       	push	r5
 3c0:	6f 92       	push	r6
 3c2:	7f 92       	push	r7
 3c4:	8f 92       	push	r8
 3c6:	9f 92       	push	r9
 3c8:	af 92       	push	r10
 3ca:	bf 92       	push	r11
 3cc:	cf 92       	push	r12
 3ce:	df 92       	push	r13
 3d0:	ef 92       	push	r14
 3d2:	ff 92       	push	r15
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
 3e0:	2b 97       	sbiw	r28, 0x0b	; 11
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	6c 01       	movw	r12, r24
 3ee:	7b 01       	movw	r14, r22
 3f0:	8a 01       	movw	r16, r20
 3f2:	fc 01       	movw	r30, r24
 3f4:	17 82       	std	Z+7, r1	; 0x07
 3f6:	16 82       	std	Z+6, r1	; 0x06
 3f8:	83 81       	ldd	r24, Z+3	; 0x03
 3fa:	81 ff       	sbrs	r24, 1
 3fc:	bf c1       	rjmp	.+894    	; 0x77c <__LOCK_REGION_LENGTH__+0x37c>
 3fe:	ce 01       	movw	r24, r28
 400:	01 96       	adiw	r24, 0x01	; 1
 402:	3c 01       	movw	r6, r24
 404:	f6 01       	movw	r30, r12
 406:	93 81       	ldd	r25, Z+3	; 0x03
 408:	f7 01       	movw	r30, r14
 40a:	93 fd       	sbrc	r25, 3
 40c:	85 91       	lpm	r24, Z+
 40e:	93 ff       	sbrs	r25, 3
 410:	81 91       	ld	r24, Z+
 412:	7f 01       	movw	r14, r30
 414:	88 23       	and	r24, r24
 416:	09 f4       	brne	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 418:	ad c1       	rjmp	.+858    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 41a:	85 32       	cpi	r24, 0x25	; 37
 41c:	39 f4       	brne	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41e:	93 fd       	sbrc	r25, 3
 420:	85 91       	lpm	r24, Z+
 422:	93 ff       	sbrs	r25, 3
 424:	81 91       	ld	r24, Z+
 426:	7f 01       	movw	r14, r30
 428:	85 32       	cpi	r24, 0x25	; 37
 42a:	21 f4       	brne	.+8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42c:	b6 01       	movw	r22, r12
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	d6 d1       	rcall	.+940    	; 0x7de <fputc>
 432:	e8 cf       	rjmp	.-48     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 434:	91 2c       	mov	r9, r1
 436:	21 2c       	mov	r2, r1
 438:	31 2c       	mov	r3, r1
 43a:	ff e1       	ldi	r31, 0x1F	; 31
 43c:	f3 15       	cp	r31, r3
 43e:	d8 f0       	brcs	.+54     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 440:	8b 32       	cpi	r24, 0x2B	; 43
 442:	79 f0       	breq	.+30     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 444:	38 f4       	brcc	.+14     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 446:	80 32       	cpi	r24, 0x20	; 32
 448:	79 f0       	breq	.+30     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 44a:	83 32       	cpi	r24, 0x23	; 35
 44c:	a1 f4       	brne	.+40     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 44e:	23 2d       	mov	r18, r3
 450:	20 61       	ori	r18, 0x10	; 16
 452:	1d c0       	rjmp	.+58     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 454:	8d 32       	cpi	r24, 0x2D	; 45
 456:	61 f0       	breq	.+24     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 458:	80 33       	cpi	r24, 0x30	; 48
 45a:	69 f4       	brne	.+26     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 45c:	23 2d       	mov	r18, r3
 45e:	21 60       	ori	r18, 0x01	; 1
 460:	16 c0       	rjmp	.+44     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 462:	83 2d       	mov	r24, r3
 464:	82 60       	ori	r24, 0x02	; 2
 466:	38 2e       	mov	r3, r24
 468:	e3 2d       	mov	r30, r3
 46a:	e4 60       	ori	r30, 0x04	; 4
 46c:	3e 2e       	mov	r3, r30
 46e:	2a c0       	rjmp	.+84     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 470:	f3 2d       	mov	r31, r3
 472:	f8 60       	ori	r31, 0x08	; 8
 474:	1d c0       	rjmp	.+58     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 476:	37 fc       	sbrc	r3, 7
 478:	2d c0       	rjmp	.+90     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 47a:	20 ed       	ldi	r18, 0xD0	; 208
 47c:	28 0f       	add	r18, r24
 47e:	2a 30       	cpi	r18, 0x0A	; 10
 480:	40 f0       	brcs	.+16     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 482:	8e 32       	cpi	r24, 0x2E	; 46
 484:	b9 f4       	brne	.+46     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 486:	36 fc       	sbrc	r3, 6
 488:	75 c1       	rjmp	.+746    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 48a:	23 2d       	mov	r18, r3
 48c:	20 64       	ori	r18, 0x40	; 64
 48e:	32 2e       	mov	r3, r18
 490:	19 c0       	rjmp	.+50     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 492:	36 fe       	sbrs	r3, 6
 494:	06 c0       	rjmp	.+12     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 496:	8a e0       	ldi	r24, 0x0A	; 10
 498:	98 9e       	mul	r9, r24
 49a:	20 0d       	add	r18, r0
 49c:	11 24       	eor	r1, r1
 49e:	92 2e       	mov	r9, r18
 4a0:	11 c0       	rjmp	.+34     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4a2:	ea e0       	ldi	r30, 0x0A	; 10
 4a4:	2e 9e       	mul	r2, r30
 4a6:	20 0d       	add	r18, r0
 4a8:	11 24       	eor	r1, r1
 4aa:	22 2e       	mov	r2, r18
 4ac:	f3 2d       	mov	r31, r3
 4ae:	f0 62       	ori	r31, 0x20	; 32
 4b0:	3f 2e       	mov	r3, r31
 4b2:	08 c0       	rjmp	.+16     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b4:	8c 36       	cpi	r24, 0x6C	; 108
 4b6:	21 f4       	brne	.+8      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b8:	83 2d       	mov	r24, r3
 4ba:	80 68       	ori	r24, 0x80	; 128
 4bc:	38 2e       	mov	r3, r24
 4be:	02 c0       	rjmp	.+4      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4c0:	88 36       	cpi	r24, 0x68	; 104
 4c2:	41 f4       	brne	.+16     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c4:	f7 01       	movw	r30, r14
 4c6:	93 fd       	sbrc	r25, 3
 4c8:	85 91       	lpm	r24, Z+
 4ca:	93 ff       	sbrs	r25, 3
 4cc:	81 91       	ld	r24, Z+
 4ce:	7f 01       	movw	r14, r30
 4d0:	81 11       	cpse	r24, r1
 4d2:	b3 cf       	rjmp	.-154    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 4d4:	98 2f       	mov	r25, r24
 4d6:	9f 7d       	andi	r25, 0xDF	; 223
 4d8:	95 54       	subi	r25, 0x45	; 69
 4da:	93 30       	cpi	r25, 0x03	; 3
 4dc:	28 f4       	brcc	.+10     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4de:	0c 5f       	subi	r16, 0xFC	; 252
 4e0:	1f 4f       	sbci	r17, 0xFF	; 255
 4e2:	9f e3       	ldi	r25, 0x3F	; 63
 4e4:	99 83       	std	Y+1, r25	; 0x01
 4e6:	0d c0       	rjmp	.+26     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4e8:	83 36       	cpi	r24, 0x63	; 99
 4ea:	31 f0       	breq	.+12     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ec:	83 37       	cpi	r24, 0x73	; 115
 4ee:	71 f0       	breq	.+28     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4f0:	83 35       	cpi	r24, 0x53	; 83
 4f2:	09 f0       	breq	.+2      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f4:	55 c0       	rjmp	.+170    	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 4f6:	20 c0       	rjmp	.+64     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 4f8:	f8 01       	movw	r30, r16
 4fa:	80 81       	ld	r24, Z
 4fc:	89 83       	std	Y+1, r24	; 0x01
 4fe:	0e 5f       	subi	r16, 0xFE	; 254
 500:	1f 4f       	sbci	r17, 0xFF	; 255
 502:	88 24       	eor	r8, r8
 504:	83 94       	inc	r8
 506:	91 2c       	mov	r9, r1
 508:	53 01       	movw	r10, r6
 50a:	12 c0       	rjmp	.+36     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 50c:	28 01       	movw	r4, r16
 50e:	f2 e0       	ldi	r31, 0x02	; 2
 510:	4f 0e       	add	r4, r31
 512:	51 1c       	adc	r5, r1
 514:	f8 01       	movw	r30, r16
 516:	a0 80       	ld	r10, Z
 518:	b1 80       	ldd	r11, Z+1	; 0x01
 51a:	36 fe       	sbrs	r3, 6
 51c:	03 c0       	rjmp	.+6      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 51e:	69 2d       	mov	r22, r9
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 524:	6f ef       	ldi	r22, 0xFF	; 255
 526:	7f ef       	ldi	r23, 0xFF	; 255
 528:	c5 01       	movw	r24, r10
 52a:	4e d1       	rcall	.+668    	; 0x7c8 <strnlen>
 52c:	4c 01       	movw	r8, r24
 52e:	82 01       	movw	r16, r4
 530:	f3 2d       	mov	r31, r3
 532:	ff 77       	andi	r31, 0x7F	; 127
 534:	3f 2e       	mov	r3, r31
 536:	15 c0       	rjmp	.+42     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 538:	28 01       	movw	r4, r16
 53a:	22 e0       	ldi	r18, 0x02	; 2
 53c:	42 0e       	add	r4, r18
 53e:	51 1c       	adc	r5, r1
 540:	f8 01       	movw	r30, r16
 542:	a0 80       	ld	r10, Z
 544:	b1 80       	ldd	r11, Z+1	; 0x01
 546:	36 fe       	sbrs	r3, 6
 548:	03 c0       	rjmp	.+6      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54a:	69 2d       	mov	r22, r9
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 550:	6f ef       	ldi	r22, 0xFF	; 255
 552:	7f ef       	ldi	r23, 0xFF	; 255
 554:	c5 01       	movw	r24, r10
 556:	2d d1       	rcall	.+602    	; 0x7b2 <strnlen_P>
 558:	4c 01       	movw	r8, r24
 55a:	f3 2d       	mov	r31, r3
 55c:	f0 68       	ori	r31, 0x80	; 128
 55e:	3f 2e       	mov	r3, r31
 560:	82 01       	movw	r16, r4
 562:	33 fc       	sbrc	r3, 3
 564:	19 c0       	rjmp	.+50     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 566:	82 2d       	mov	r24, r2
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	88 16       	cp	r8, r24
 56c:	99 06       	cpc	r9, r25
 56e:	a0 f4       	brcc	.+40     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 570:	b6 01       	movw	r22, r12
 572:	80 e2       	ldi	r24, 0x20	; 32
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	33 d1       	rcall	.+614    	; 0x7de <fputc>
 578:	2a 94       	dec	r2
 57a:	f5 cf       	rjmp	.-22     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 57c:	f5 01       	movw	r30, r10
 57e:	37 fc       	sbrc	r3, 7
 580:	85 91       	lpm	r24, Z+
 582:	37 fe       	sbrs	r3, 7
 584:	81 91       	ld	r24, Z+
 586:	5f 01       	movw	r10, r30
 588:	b6 01       	movw	r22, r12
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	28 d1       	rcall	.+592    	; 0x7de <fputc>
 58e:	21 10       	cpse	r2, r1
 590:	2a 94       	dec	r2
 592:	21 e0       	ldi	r18, 0x01	; 1
 594:	82 1a       	sub	r8, r18
 596:	91 08       	sbc	r9, r1
 598:	81 14       	cp	r8, r1
 59a:	91 04       	cpc	r9, r1
 59c:	79 f7       	brne	.-34     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 59e:	e1 c0       	rjmp	.+450    	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 5a0:	84 36       	cpi	r24, 0x64	; 100
 5a2:	11 f0       	breq	.+4      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a4:	89 36       	cpi	r24, 0x69	; 105
 5a6:	39 f5       	brne	.+78     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5a8:	f8 01       	movw	r30, r16
 5aa:	37 fe       	sbrs	r3, 7
 5ac:	07 c0       	rjmp	.+14     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ae:	60 81       	ld	r22, Z
 5b0:	71 81       	ldd	r23, Z+1	; 0x01
 5b2:	82 81       	ldd	r24, Z+2	; 0x02
 5b4:	93 81       	ldd	r25, Z+3	; 0x03
 5b6:	0c 5f       	subi	r16, 0xFC	; 252
 5b8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ba:	08 c0       	rjmp	.+16     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5bc:	60 81       	ld	r22, Z
 5be:	71 81       	ldd	r23, Z+1	; 0x01
 5c0:	07 2e       	mov	r0, r23
 5c2:	00 0c       	add	r0, r0
 5c4:	88 0b       	sbc	r24, r24
 5c6:	99 0b       	sbc	r25, r25
 5c8:	0e 5f       	subi	r16, 0xFE	; 254
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	f3 2d       	mov	r31, r3
 5ce:	ff 76       	andi	r31, 0x6F	; 111
 5d0:	3f 2e       	mov	r3, r31
 5d2:	97 ff       	sbrs	r25, 7
 5d4:	09 c0       	rjmp	.+18     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5d6:	90 95       	com	r25
 5d8:	80 95       	com	r24
 5da:	70 95       	com	r23
 5dc:	61 95       	neg	r22
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	f0 68       	ori	r31, 0x80	; 128
 5e6:	3f 2e       	mov	r3, r31
 5e8:	2a e0       	ldi	r18, 0x0A	; 10
 5ea:	30 e0       	ldi	r19, 0x00	; 0
 5ec:	a3 01       	movw	r20, r6
 5ee:	33 d1       	rcall	.+614    	; 0x856 <__ultoa_invert>
 5f0:	88 2e       	mov	r8, r24
 5f2:	86 18       	sub	r8, r6
 5f4:	44 c0       	rjmp	.+136    	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 5f6:	85 37       	cpi	r24, 0x75	; 117
 5f8:	31 f4       	brne	.+12     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5fa:	23 2d       	mov	r18, r3
 5fc:	2f 7e       	andi	r18, 0xEF	; 239
 5fe:	b2 2e       	mov	r11, r18
 600:	2a e0       	ldi	r18, 0x0A	; 10
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	25 c0       	rjmp	.+74     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 606:	93 2d       	mov	r25, r3
 608:	99 7f       	andi	r25, 0xF9	; 249
 60a:	b9 2e       	mov	r11, r25
 60c:	8f 36       	cpi	r24, 0x6F	; 111
 60e:	c1 f0       	breq	.+48     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 610:	18 f4       	brcc	.+6      	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 612:	88 35       	cpi	r24, 0x58	; 88
 614:	79 f0       	breq	.+30     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 616:	ae c0       	rjmp	.+348    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 618:	80 37       	cpi	r24, 0x70	; 112
 61a:	19 f0       	breq	.+6      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 61c:	88 37       	cpi	r24, 0x78	; 120
 61e:	21 f0       	breq	.+8      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 620:	a9 c0       	rjmp	.+338    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
 622:	e9 2f       	mov	r30, r25
 624:	e0 61       	ori	r30, 0x10	; 16
 626:	be 2e       	mov	r11, r30
 628:	b4 fe       	sbrs	r11, 4
 62a:	0d c0       	rjmp	.+26     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 62c:	fb 2d       	mov	r31, r11
 62e:	f4 60       	ori	r31, 0x04	; 4
 630:	bf 2e       	mov	r11, r31
 632:	09 c0       	rjmp	.+18     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 634:	34 fe       	sbrs	r3, 4
 636:	0a c0       	rjmp	.+20     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 638:	29 2f       	mov	r18, r25
 63a:	26 60       	ori	r18, 0x06	; 6
 63c:	b2 2e       	mov	r11, r18
 63e:	06 c0       	rjmp	.+12     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 640:	28 e0       	ldi	r18, 0x08	; 8
 642:	30 e0       	ldi	r19, 0x00	; 0
 644:	05 c0       	rjmp	.+10     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 646:	20 e1       	ldi	r18, 0x10	; 16
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 64c:	20 e1       	ldi	r18, 0x10	; 16
 64e:	32 e0       	ldi	r19, 0x02	; 2
 650:	f8 01       	movw	r30, r16
 652:	b7 fe       	sbrs	r11, 7
 654:	07 c0       	rjmp	.+14     	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 656:	60 81       	ld	r22, Z
 658:	71 81       	ldd	r23, Z+1	; 0x01
 65a:	82 81       	ldd	r24, Z+2	; 0x02
 65c:	93 81       	ldd	r25, Z+3	; 0x03
 65e:	0c 5f       	subi	r16, 0xFC	; 252
 660:	1f 4f       	sbci	r17, 0xFF	; 255
 662:	06 c0       	rjmp	.+12     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 664:	60 81       	ld	r22, Z
 666:	71 81       	ldd	r23, Z+1	; 0x01
 668:	80 e0       	ldi	r24, 0x00	; 0
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	0e 5f       	subi	r16, 0xFE	; 254
 66e:	1f 4f       	sbci	r17, 0xFF	; 255
 670:	a3 01       	movw	r20, r6
 672:	f1 d0       	rcall	.+482    	; 0x856 <__ultoa_invert>
 674:	88 2e       	mov	r8, r24
 676:	86 18       	sub	r8, r6
 678:	fb 2d       	mov	r31, r11
 67a:	ff 77       	andi	r31, 0x7F	; 127
 67c:	3f 2e       	mov	r3, r31
 67e:	36 fe       	sbrs	r3, 6
 680:	0d c0       	rjmp	.+26     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 682:	23 2d       	mov	r18, r3
 684:	2e 7f       	andi	r18, 0xFE	; 254
 686:	a2 2e       	mov	r10, r18
 688:	89 14       	cp	r8, r9
 68a:	58 f4       	brcc	.+22     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 68c:	34 fe       	sbrs	r3, 4
 68e:	0b c0       	rjmp	.+22     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 690:	32 fc       	sbrc	r3, 2
 692:	09 c0       	rjmp	.+18     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 694:	83 2d       	mov	r24, r3
 696:	8e 7e       	andi	r24, 0xEE	; 238
 698:	a8 2e       	mov	r10, r24
 69a:	05 c0       	rjmp	.+10     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69c:	b8 2c       	mov	r11, r8
 69e:	a3 2c       	mov	r10, r3
 6a0:	03 c0       	rjmp	.+6      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6a2:	b8 2c       	mov	r11, r8
 6a4:	01 c0       	rjmp	.+2      	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 6a6:	b9 2c       	mov	r11, r9
 6a8:	a4 fe       	sbrs	r10, 4
 6aa:	0f c0       	rjmp	.+30     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6ac:	fe 01       	movw	r30, r28
 6ae:	e8 0d       	add	r30, r8
 6b0:	f1 1d       	adc	r31, r1
 6b2:	80 81       	ld	r24, Z
 6b4:	80 33       	cpi	r24, 0x30	; 48
 6b6:	21 f4       	brne	.+8      	; 0x6c0 <__LOCK_REGION_LENGTH__+0x2c0>
 6b8:	9a 2d       	mov	r25, r10
 6ba:	99 7e       	andi	r25, 0xE9	; 233
 6bc:	a9 2e       	mov	r10, r25
 6be:	09 c0       	rjmp	.+18     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6c0:	a2 fe       	sbrs	r10, 2
 6c2:	06 c0       	rjmp	.+12     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6c4:	b3 94       	inc	r11
 6c6:	b3 94       	inc	r11
 6c8:	04 c0       	rjmp	.+8      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6ca:	8a 2d       	mov	r24, r10
 6cc:	86 78       	andi	r24, 0x86	; 134
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6d0:	b3 94       	inc	r11
 6d2:	a3 fc       	sbrc	r10, 3
 6d4:	10 c0       	rjmp	.+32     	; 0x6f6 <__LOCK_REGION_LENGTH__+0x2f6>
 6d6:	a0 fe       	sbrs	r10, 0
 6d8:	06 c0       	rjmp	.+12     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6da:	b2 14       	cp	r11, r2
 6dc:	80 f4       	brcc	.+32     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6de:	28 0c       	add	r2, r8
 6e0:	92 2c       	mov	r9, r2
 6e2:	9b 18       	sub	r9, r11
 6e4:	0d c0       	rjmp	.+26     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6e6:	b2 14       	cp	r11, r2
 6e8:	58 f4       	brcc	.+22     	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6ea:	b6 01       	movw	r22, r12
 6ec:	80 e2       	ldi	r24, 0x20	; 32
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	76 d0       	rcall	.+236    	; 0x7de <fputc>
 6f2:	b3 94       	inc	r11
 6f4:	f8 cf       	rjmp	.-16     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6f6:	b2 14       	cp	r11, r2
 6f8:	18 f4       	brcc	.+6      	; 0x700 <__LOCK_REGION_LENGTH__+0x300>
 6fa:	2b 18       	sub	r2, r11
 6fc:	02 c0       	rjmp	.+4      	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6fe:	98 2c       	mov	r9, r8
 700:	21 2c       	mov	r2, r1
 702:	a4 fe       	sbrs	r10, 4
 704:	0f c0       	rjmp	.+30     	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
 706:	b6 01       	movw	r22, r12
 708:	80 e3       	ldi	r24, 0x30	; 48
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	68 d0       	rcall	.+208    	; 0x7de <fputc>
 70e:	a2 fe       	sbrs	r10, 2
 710:	16 c0       	rjmp	.+44     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 712:	a1 fc       	sbrc	r10, 1
 714:	03 c0       	rjmp	.+6      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 716:	88 e7       	ldi	r24, 0x78	; 120
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	02 c0       	rjmp	.+4      	; 0x720 <__LOCK_REGION_LENGTH__+0x320>
 71c:	88 e5       	ldi	r24, 0x58	; 88
 71e:	90 e0       	ldi	r25, 0x00	; 0
 720:	b6 01       	movw	r22, r12
 722:	0c c0       	rjmp	.+24     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 724:	8a 2d       	mov	r24, r10
 726:	86 78       	andi	r24, 0x86	; 134
 728:	51 f0       	breq	.+20     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 72a:	a1 fe       	sbrs	r10, 1
 72c:	02 c0       	rjmp	.+4      	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 72e:	8b e2       	ldi	r24, 0x2B	; 43
 730:	01 c0       	rjmp	.+2      	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 732:	80 e2       	ldi	r24, 0x20	; 32
 734:	a7 fc       	sbrc	r10, 7
 736:	8d e2       	ldi	r24, 0x2D	; 45
 738:	b6 01       	movw	r22, r12
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	50 d0       	rcall	.+160    	; 0x7de <fputc>
 73e:	89 14       	cp	r8, r9
 740:	30 f4       	brcc	.+12     	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
 742:	b6 01       	movw	r22, r12
 744:	80 e3       	ldi	r24, 0x30	; 48
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	4a d0       	rcall	.+148    	; 0x7de <fputc>
 74a:	9a 94       	dec	r9
 74c:	f8 cf       	rjmp	.-16     	; 0x73e <__LOCK_REGION_LENGTH__+0x33e>
 74e:	8a 94       	dec	r8
 750:	f3 01       	movw	r30, r6
 752:	e8 0d       	add	r30, r8
 754:	f1 1d       	adc	r31, r1
 756:	80 81       	ld	r24, Z
 758:	b6 01       	movw	r22, r12
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	40 d0       	rcall	.+128    	; 0x7de <fputc>
 75e:	81 10       	cpse	r8, r1
 760:	f6 cf       	rjmp	.-20     	; 0x74e <__LOCK_REGION_LENGTH__+0x34e>
 762:	22 20       	and	r2, r2
 764:	09 f4       	brne	.+2      	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 766:	4e ce       	rjmp	.-868    	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 768:	b6 01       	movw	r22, r12
 76a:	80 e2       	ldi	r24, 0x20	; 32
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	37 d0       	rcall	.+110    	; 0x7de <fputc>
 770:	2a 94       	dec	r2
 772:	f7 cf       	rjmp	.-18     	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 774:	f6 01       	movw	r30, r12
 776:	86 81       	ldd	r24, Z+6	; 0x06
 778:	97 81       	ldd	r25, Z+7	; 0x07
 77a:	02 c0       	rjmp	.+4      	; 0x780 <__LOCK_REGION_LENGTH__+0x380>
 77c:	8f ef       	ldi	r24, 0xFF	; 255
 77e:	9f ef       	ldi	r25, 0xFF	; 255
 780:	2b 96       	adiw	r28, 0x0b	; 11
 782:	0f b6       	in	r0, 0x3f	; 63
 784:	f8 94       	cli
 786:	de bf       	out	0x3e, r29	; 62
 788:	0f be       	out	0x3f, r0	; 63
 78a:	cd bf       	out	0x3d, r28	; 61
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	1f 91       	pop	r17
 792:	0f 91       	pop	r16
 794:	ff 90       	pop	r15
 796:	ef 90       	pop	r14
 798:	df 90       	pop	r13
 79a:	cf 90       	pop	r12
 79c:	bf 90       	pop	r11
 79e:	af 90       	pop	r10
 7a0:	9f 90       	pop	r9
 7a2:	8f 90       	pop	r8
 7a4:	7f 90       	pop	r7
 7a6:	6f 90       	pop	r6
 7a8:	5f 90       	pop	r5
 7aa:	4f 90       	pop	r4
 7ac:	3f 90       	pop	r3
 7ae:	2f 90       	pop	r2
 7b0:	08 95       	ret

000007b2 <strnlen_P>:
 7b2:	fc 01       	movw	r30, r24
 7b4:	05 90       	lpm	r0, Z+
 7b6:	61 50       	subi	r22, 0x01	; 1
 7b8:	70 40       	sbci	r23, 0x00	; 0
 7ba:	01 10       	cpse	r0, r1
 7bc:	d8 f7       	brcc	.-10     	; 0x7b4 <strnlen_P+0x2>
 7be:	80 95       	com	r24
 7c0:	90 95       	com	r25
 7c2:	8e 0f       	add	r24, r30
 7c4:	9f 1f       	adc	r25, r31
 7c6:	08 95       	ret

000007c8 <strnlen>:
 7c8:	fc 01       	movw	r30, r24
 7ca:	61 50       	subi	r22, 0x01	; 1
 7cc:	70 40       	sbci	r23, 0x00	; 0
 7ce:	01 90       	ld	r0, Z+
 7d0:	01 10       	cpse	r0, r1
 7d2:	d8 f7       	brcc	.-10     	; 0x7ca <strnlen+0x2>
 7d4:	80 95       	com	r24
 7d6:	90 95       	com	r25
 7d8:	8e 0f       	add	r24, r30
 7da:	9f 1f       	adc	r25, r31
 7dc:	08 95       	ret

000007de <fputc>:
 7de:	0f 93       	push	r16
 7e0:	1f 93       	push	r17
 7e2:	cf 93       	push	r28
 7e4:	df 93       	push	r29
 7e6:	fb 01       	movw	r30, r22
 7e8:	23 81       	ldd	r18, Z+3	; 0x03
 7ea:	21 fd       	sbrc	r18, 1
 7ec:	03 c0       	rjmp	.+6      	; 0x7f4 <fputc+0x16>
 7ee:	8f ef       	ldi	r24, 0xFF	; 255
 7f0:	9f ef       	ldi	r25, 0xFF	; 255
 7f2:	2c c0       	rjmp	.+88     	; 0x84c <fputc+0x6e>
 7f4:	22 ff       	sbrs	r18, 2
 7f6:	16 c0       	rjmp	.+44     	; 0x824 <fputc+0x46>
 7f8:	46 81       	ldd	r20, Z+6	; 0x06
 7fa:	57 81       	ldd	r21, Z+7	; 0x07
 7fc:	24 81       	ldd	r18, Z+4	; 0x04
 7fe:	35 81       	ldd	r19, Z+5	; 0x05
 800:	42 17       	cp	r20, r18
 802:	53 07       	cpc	r21, r19
 804:	44 f4       	brge	.+16     	; 0x816 <fputc+0x38>
 806:	a0 81       	ld	r26, Z
 808:	b1 81       	ldd	r27, Z+1	; 0x01
 80a:	9d 01       	movw	r18, r26
 80c:	2f 5f       	subi	r18, 0xFF	; 255
 80e:	3f 4f       	sbci	r19, 0xFF	; 255
 810:	31 83       	std	Z+1, r19	; 0x01
 812:	20 83       	st	Z, r18
 814:	8c 93       	st	X, r24
 816:	26 81       	ldd	r18, Z+6	; 0x06
 818:	37 81       	ldd	r19, Z+7	; 0x07
 81a:	2f 5f       	subi	r18, 0xFF	; 255
 81c:	3f 4f       	sbci	r19, 0xFF	; 255
 81e:	37 83       	std	Z+7, r19	; 0x07
 820:	26 83       	std	Z+6, r18	; 0x06
 822:	14 c0       	rjmp	.+40     	; 0x84c <fputc+0x6e>
 824:	8b 01       	movw	r16, r22
 826:	ec 01       	movw	r28, r24
 828:	fb 01       	movw	r30, r22
 82a:	00 84       	ldd	r0, Z+8	; 0x08
 82c:	f1 85       	ldd	r31, Z+9	; 0x09
 82e:	e0 2d       	mov	r30, r0
 830:	09 95       	icall
 832:	89 2b       	or	r24, r25
 834:	e1 f6       	brne	.-72     	; 0x7ee <fputc+0x10>
 836:	d8 01       	movw	r26, r16
 838:	16 96       	adiw	r26, 0x06	; 6
 83a:	8d 91       	ld	r24, X+
 83c:	9c 91       	ld	r25, X
 83e:	17 97       	sbiw	r26, 0x07	; 7
 840:	01 96       	adiw	r24, 0x01	; 1
 842:	17 96       	adiw	r26, 0x07	; 7
 844:	9c 93       	st	X, r25
 846:	8e 93       	st	-X, r24
 848:	16 97       	sbiw	r26, 0x06	; 6
 84a:	ce 01       	movw	r24, r28
 84c:	df 91       	pop	r29
 84e:	cf 91       	pop	r28
 850:	1f 91       	pop	r17
 852:	0f 91       	pop	r16
 854:	08 95       	ret

00000856 <__ultoa_invert>:
 856:	fa 01       	movw	r30, r20
 858:	aa 27       	eor	r26, r26
 85a:	28 30       	cpi	r18, 0x08	; 8
 85c:	51 f1       	breq	.+84     	; 0x8b2 <__ultoa_invert+0x5c>
 85e:	20 31       	cpi	r18, 0x10	; 16
 860:	81 f1       	breq	.+96     	; 0x8c2 <__ultoa_invert+0x6c>
 862:	e8 94       	clt
 864:	6f 93       	push	r22
 866:	6e 7f       	andi	r22, 0xFE	; 254
 868:	6e 5f       	subi	r22, 0xFE	; 254
 86a:	7f 4f       	sbci	r23, 0xFF	; 255
 86c:	8f 4f       	sbci	r24, 0xFF	; 255
 86e:	9f 4f       	sbci	r25, 0xFF	; 255
 870:	af 4f       	sbci	r26, 0xFF	; 255
 872:	b1 e0       	ldi	r27, 0x01	; 1
 874:	3e d0       	rcall	.+124    	; 0x8f2 <__ultoa_invert+0x9c>
 876:	b4 e0       	ldi	r27, 0x04	; 4
 878:	3c d0       	rcall	.+120    	; 0x8f2 <__ultoa_invert+0x9c>
 87a:	67 0f       	add	r22, r23
 87c:	78 1f       	adc	r23, r24
 87e:	89 1f       	adc	r24, r25
 880:	9a 1f       	adc	r25, r26
 882:	a1 1d       	adc	r26, r1
 884:	68 0f       	add	r22, r24
 886:	79 1f       	adc	r23, r25
 888:	8a 1f       	adc	r24, r26
 88a:	91 1d       	adc	r25, r1
 88c:	a1 1d       	adc	r26, r1
 88e:	6a 0f       	add	r22, r26
 890:	71 1d       	adc	r23, r1
 892:	81 1d       	adc	r24, r1
 894:	91 1d       	adc	r25, r1
 896:	a1 1d       	adc	r26, r1
 898:	20 d0       	rcall	.+64     	; 0x8da <__ultoa_invert+0x84>
 89a:	09 f4       	brne	.+2      	; 0x89e <__ultoa_invert+0x48>
 89c:	68 94       	set
 89e:	3f 91       	pop	r19
 8a0:	2a e0       	ldi	r18, 0x0A	; 10
 8a2:	26 9f       	mul	r18, r22
 8a4:	11 24       	eor	r1, r1
 8a6:	30 19       	sub	r19, r0
 8a8:	30 5d       	subi	r19, 0xD0	; 208
 8aa:	31 93       	st	Z+, r19
 8ac:	de f6       	brtc	.-74     	; 0x864 <__ultoa_invert+0xe>
 8ae:	cf 01       	movw	r24, r30
 8b0:	08 95       	ret
 8b2:	46 2f       	mov	r20, r22
 8b4:	47 70       	andi	r20, 0x07	; 7
 8b6:	40 5d       	subi	r20, 0xD0	; 208
 8b8:	41 93       	st	Z+, r20
 8ba:	b3 e0       	ldi	r27, 0x03	; 3
 8bc:	0f d0       	rcall	.+30     	; 0x8dc <__ultoa_invert+0x86>
 8be:	c9 f7       	brne	.-14     	; 0x8b2 <__ultoa_invert+0x5c>
 8c0:	f6 cf       	rjmp	.-20     	; 0x8ae <__ultoa_invert+0x58>
 8c2:	46 2f       	mov	r20, r22
 8c4:	4f 70       	andi	r20, 0x0F	; 15
 8c6:	40 5d       	subi	r20, 0xD0	; 208
 8c8:	4a 33       	cpi	r20, 0x3A	; 58
 8ca:	18 f0       	brcs	.+6      	; 0x8d2 <__ultoa_invert+0x7c>
 8cc:	49 5d       	subi	r20, 0xD9	; 217
 8ce:	31 fd       	sbrc	r19, 1
 8d0:	40 52       	subi	r20, 0x20	; 32
 8d2:	41 93       	st	Z+, r20
 8d4:	02 d0       	rcall	.+4      	; 0x8da <__ultoa_invert+0x84>
 8d6:	a9 f7       	brne	.-22     	; 0x8c2 <__ultoa_invert+0x6c>
 8d8:	ea cf       	rjmp	.-44     	; 0x8ae <__ultoa_invert+0x58>
 8da:	b4 e0       	ldi	r27, 0x04	; 4
 8dc:	a6 95       	lsr	r26
 8de:	97 95       	ror	r25
 8e0:	87 95       	ror	r24
 8e2:	77 95       	ror	r23
 8e4:	67 95       	ror	r22
 8e6:	ba 95       	dec	r27
 8e8:	c9 f7       	brne	.-14     	; 0x8dc <__ultoa_invert+0x86>
 8ea:	00 97       	sbiw	r24, 0x00	; 0
 8ec:	61 05       	cpc	r22, r1
 8ee:	71 05       	cpc	r23, r1
 8f0:	08 95       	ret
 8f2:	9b 01       	movw	r18, r22
 8f4:	ac 01       	movw	r20, r24
 8f6:	0a 2e       	mov	r0, r26
 8f8:	06 94       	lsr	r0
 8fa:	57 95       	ror	r21
 8fc:	47 95       	ror	r20
 8fe:	37 95       	ror	r19
 900:	27 95       	ror	r18
 902:	ba 95       	dec	r27
 904:	c9 f7       	brne	.-14     	; 0x8f8 <__ultoa_invert+0xa2>
 906:	62 0f       	add	r22, r18
 908:	73 1f       	adc	r23, r19
 90a:	84 1f       	adc	r24, r20
 90c:	95 1f       	adc	r25, r21
 90e:	a0 1d       	adc	r26, r0
 910:	08 95       	ret

00000912 <_exit>:
 912:	f8 94       	cli

00000914 <__stop_program>:
 914:	ff cf       	rjmp	.-2      	; 0x914 <__stop_program>
