
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  0000079e  00000812  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000079e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000840  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000089c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000008dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009e9  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c8  00000000  00000000  000012fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000036f  00000000  00000000  00001bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00001f34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000042d  00000000  00000000  00001fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001fe  00000000  00000000  00002405  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002603  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e9       	ldi	r30, 0x9E	; 158
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 32       	cpi	r26, 0x2E	; 46
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	16 d0       	rcall	.+44     	; 0xe0 <main>
  b4:	72 c3       	rjmp	.+1764   	; 0x79a <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <putch_USART0>:
	//sei();
}
*/
void putch_USART0(char data)
{
	while(!(UCSR0A & (1<<UDRE0)));
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <putch_USART0>
	UDR0 = data;
  bc:	8c b9       	out	0x0c, r24	; 12
  be:	08 95       	ret

000000c0 <puts_USART0>:
}

void puts_USART0(char *str)
{
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	ec 01       	movw	r28, r24
	while(*str != 0){
  c6:	89 91       	ld	r24, Y+
  c8:	88 23       	and	r24, r24
  ca:	11 f0       	breq	.+4      	; 0xd0 <puts_USART0+0x10>
		putch_USART0(*str);
  cc:	f5 df       	rcall	.-22     	; 0xb8 <putch_USART0>
  ce:	fb cf       	rjmp	.-10     	; 0xc6 <puts_USART0+0x6>
		str++;
	}
}
  d0:	df 91       	pop	r29
  d2:	cf 91       	pop	r28
  d4:	08 95       	ret

000000d6 <get_dan>:

unsigned char get_dan(){
	unsigned char dan;
	while((UCSR0A & 0x80) == 0); //데이터 수신할때까지 대기
  d6:	5f 9b       	sbis	0x0b, 7	; 11
  d8:	fe cf       	rjmp	.-4      	; 0xd6 <get_dan>
	dan = UDR0; //수신된 데이터 UDR0에 저장
  da:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
  dc:	5f 9a       	sbi	0x0b, 7	; 11
	
	return dan; //읽어온 문자 반환
}
  de:	08 95       	ret

000000e0 <main>:

int main(){
  e0:	8f 92       	push	r8
  e2:	9f 92       	push	r9
  e4:	af 92       	push	r10
  e6:	bf 92       	push	r11
  e8:	cf 92       	push	r12
  ea:	df 92       	push	r13
  ec:	ef 92       	push	r14
  ee:	ff 92       	push	r15
  f0:	0f 93       	push	r16
  f2:	1f 93       	push	r17
  f4:	cf 93       	push	r28
  f6:	df 93       	push	r29
  f8:	cd b7       	in	r28, 0x3d	; 61
  fa:	de b7       	in	r29, 0x3e	; 62
  fc:	6e 97       	sbiw	r28, 0x1e	; 30
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	f8 94       	cli
 102:	de bf       	out	0x3e, r29	; 62
 104:	0f be       	out	0x3f, r0	; 63
 106:	cd bf       	out	0x3d, r28	; 61
	unsigned char text[]=
 108:	8d e1       	ldi	r24, 0x1D	; 29
 10a:	e1 e1       	ldi	r30, 0x11	; 17
 10c:	f1 e0       	ldi	r31, 0x01	; 1
 10e:	de 01       	movw	r26, r28
 110:	11 96       	adiw	r26, 0x01	; 1
 112:	01 90       	ld	r0, Z+
 114:	0d 92       	st	X+, r0
 116:	8a 95       	dec	r24
 118:	e1 f7       	brne	.-8      	; 0x112 <main+0x32>
	"[GUGUDAN]\r\n? times table >> ";
	unsigned char dan = 0, i = 0;
	
	DDRE = 0xfe; //Rx(입력 0), Tx(출력 1)
 11a:	8e ef       	ldi	r24, 0xFE	; 254
 11c:	82 b9       	out	0x02, r24	; 2
	
	UCSR0A = 0x00;
 11e:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18; //Rx, Tx enable
 120:	88 e1       	ldi	r24, 0x18	; 24
 122:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06; //비동기 방식, No Parity bit, 1 Stop bit
 124:	86 e0       	ldi	r24, 0x06	; 6
 126:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	
	UBRR0H = 0x00;
 12a:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 3; //115200 bps
 12e:	83 e0       	ldi	r24, 0x03	; 3
 130:	89 b9       	out	0x09, r24	; 9
}

int main(){
	unsigned char text[]=
	"[GUGUDAN]\r\n? times table >> ";
	unsigned char dan = 0, i = 0;
 132:	10 e0       	ldi	r17, 0x00	; 0
	UCSR0C = 0x06; //비동기 방식, No Parity bit, 1 Stop bit
	
	UBRR0H = 0x00;
	UBRR0L = 3; //115200 bps
	
	while(text[i] != '\0'){
 134:	e1 e0       	ldi	r30, 0x01	; 1
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	ec 0f       	add	r30, r28
 13a:	fd 1f       	adc	r31, r29
 13c:	e1 0f       	add	r30, r17
 13e:	f1 1d       	adc	r31, r1
 140:	80 81       	ld	r24, Z
 142:	88 23       	and	r24, r24
 144:	19 f0       	breq	.+6      	; 0x14c <main+0x6c>
		putch_USART0(text[i++]);
 146:	1f 5f       	subi	r17, 0xFF	; 255
 148:	b7 df       	rcall	.-146    	; 0xb8 <putch_USART0>
 14a:	f4 cf       	rjmp	.-24     	; 0x134 <main+0x54>
	}
	
	dan = get_dan(); //몇 단인지 입력 값 받아오기
 14c:	c4 df       	rcall	.-120    	; 0xd6 <get_dan>
 14e:	08 2f       	mov	r16, r24
	putch_USART0(dan); //터미널에 출력해주기
 150:	b3 df       	rcall	.-154    	; 0xb8 <putch_USART0>
 152:	1e 8e       	std	Y+30, r1	; 0x1e
	
	unsigned char temp[] = {0, };
 154:	10 e0       	ldi	r17, 0x00	; 0
 156:	00 53       	subi	r16, 0x30	; 48
 158:	11 09       	sbc	r17, r1
 15a:	68 01       	movw	r12, r16
 15c:	ee 24       	eor	r14, r14
 15e:	e3 94       	inc	r14
 160:	f1 2c       	mov	r15, r1
 162:	90 e0       	ldi	r25, 0x00	; 0
	for(i = 1; i < 10 ; i++){
		sprintf(temp, "\r\n%d X %d = %d\r\n", dan-48, i, (dan-48)*i);
 164:	89 2e       	mov	r8, r25
 166:	91 e0       	ldi	r25, 0x01	; 1
 168:	99 2e       	mov	r9, r25
 16a:	5e 01       	movw	r10, r28
 16c:	2e e1       	ldi	r18, 0x1E	; 30
 16e:	a2 0e       	add	r10, r18
 170:	b1 1c       	adc	r11, r1
 172:	df 92       	push	r13
 174:	cf 92       	push	r12
 176:	ff 92       	push	r15
 178:	ef 92       	push	r14
 17a:	1f 93       	push	r17
 17c:	0f 93       	push	r16
 17e:	9f 92       	push	r9
 180:	8f 92       	push	r8
 182:	bf 92       	push	r11
 184:	af 92       	push	r10
 186:	2e d0       	rcall	.+92     	; 0x1e4 <sprintf>
		puts_USART0(temp);
 188:	c5 01       	movw	r24, r10
 18a:	9a df       	rcall	.-204    	; 0xc0 <puts_USART0>
 18c:	8f ef       	ldi	r24, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18e:	9f e7       	ldi	r25, 0x7F	; 127
 190:	26 e1       	ldi	r18, 0x16	; 22
 192:	81 50       	subi	r24, 0x01	; 1
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	20 40       	sbci	r18, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0xb2>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xbc>
 19c:	00 00       	nop
 19e:	8f ef       	ldi	r24, 0xFF	; 255
 1a0:	e8 1a       	sub	r14, r24
 1a2:	f8 0a       	sbc	r15, r24
 1a4:	c0 0e       	add	r12, r16
 1a6:	d1 1e       	adc	r13, r17
 1a8:	0f b6       	in	r0, 0x3f	; 63
	
	dan = get_dan(); //몇 단인지 입력 값 받아오기
	putch_USART0(dan); //터미널에 출력해주기
	
	unsigned char temp[] = {0, };
	for(i = 1; i < 10 ; i++){
 1aa:	f8 94       	cli
 1ac:	de bf       	out	0x3e, r29	; 62
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	cd bf       	out	0x3d, r28	; 61
 1b2:	9a e0       	ldi	r25, 0x0A	; 10
 1b4:	e9 16       	cp	r14, r25
 1b6:	f1 04       	cpc	r15, r1
 1b8:	e1 f6       	brne	.-72     	; 0x172 <main+0x92>
 1ba:	80 e0       	ldi	r24, 0x00	; 0
		puts_USART0(temp);
		_delay_ms(500);
	}

	return 0;
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	6e 96       	adiw	r28, 0x1e	; 30
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	f8 94       	cli
 1c4:	de bf       	out	0x3e, r29	; 62
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	cd bf       	out	0x3d, r28	; 61
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	ff 90       	pop	r15
 1d4:	ef 90       	pop	r14
 1d6:	df 90       	pop	r13
 1d8:	cf 90       	pop	r12
 1da:	bf 90       	pop	r11
 1dc:	af 90       	pop	r10
 1de:	9f 90       	pop	r9
 1e0:	8f 90       	pop	r8
 1e2:	08 95       	ret

000001e4 <sprintf>:
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	df 93       	push	r29
 1ec:	cd b7       	in	r28, 0x3d	; 61
 1ee:	de b7       	in	r29, 0x3e	; 62
 1f0:	2e 97       	sbiw	r28, 0x0e	; 14
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
 1fc:	0d 89       	ldd	r16, Y+21	; 0x15
 1fe:	1e 89       	ldd	r17, Y+22	; 0x16
 200:	86 e0       	ldi	r24, 0x06	; 6
 202:	8c 83       	std	Y+4, r24	; 0x04
 204:	1a 83       	std	Y+2, r17	; 0x02
 206:	09 83       	std	Y+1, r16	; 0x01
 208:	8f ef       	ldi	r24, 0xFF	; 255
 20a:	9f e7       	ldi	r25, 0x7F	; 127
 20c:	9e 83       	std	Y+6, r25	; 0x06
 20e:	8d 83       	std	Y+5, r24	; 0x05
 210:	ae 01       	movw	r20, r28
 212:	47 5e       	subi	r20, 0xE7	; 231
 214:	5f 4f       	sbci	r21, 0xFF	; 255
 216:	6f 89       	ldd	r22, Y+23	; 0x17
 218:	78 8d       	ldd	r23, Y+24	; 0x18
 21a:	ce 01       	movw	r24, r28
 21c:	01 96       	adiw	r24, 0x01	; 1
 21e:	10 d0       	rcall	.+32     	; 0x240 <vfprintf>
 220:	ef 81       	ldd	r30, Y+7	; 0x07
 222:	f8 85       	ldd	r31, Y+8	; 0x08
 224:	e0 0f       	add	r30, r16
 226:	f1 1f       	adc	r31, r17
 228:	10 82       	st	Z, r1
 22a:	2e 96       	adiw	r28, 0x0e	; 14
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	f8 94       	cli
 230:	de bf       	out	0x3e, r29	; 62
 232:	0f be       	out	0x3f, r0	; 63
 234:	cd bf       	out	0x3d, r28	; 61
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	1f 91       	pop	r17
 23c:	0f 91       	pop	r16
 23e:	08 95       	ret

00000240 <vfprintf>:
 240:	2f 92       	push	r2
 242:	3f 92       	push	r3
 244:	4f 92       	push	r4
 246:	5f 92       	push	r5
 248:	6f 92       	push	r6
 24a:	7f 92       	push	r7
 24c:	8f 92       	push	r8
 24e:	9f 92       	push	r9
 250:	af 92       	push	r10
 252:	bf 92       	push	r11
 254:	cf 92       	push	r12
 256:	df 92       	push	r13
 258:	ef 92       	push	r14
 25a:	ff 92       	push	r15
 25c:	0f 93       	push	r16
 25e:	1f 93       	push	r17
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	cd b7       	in	r28, 0x3d	; 61
 266:	de b7       	in	r29, 0x3e	; 62
 268:	2b 97       	sbiw	r28, 0x0b	; 11
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
 274:	6c 01       	movw	r12, r24
 276:	7b 01       	movw	r14, r22
 278:	8a 01       	movw	r16, r20
 27a:	fc 01       	movw	r30, r24
 27c:	17 82       	std	Z+7, r1	; 0x07
 27e:	16 82       	std	Z+6, r1	; 0x06
 280:	83 81       	ldd	r24, Z+3	; 0x03
 282:	81 ff       	sbrs	r24, 1
 284:	bf c1       	rjmp	.+894    	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 286:	ce 01       	movw	r24, r28
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	3c 01       	movw	r6, r24
 28c:	f6 01       	movw	r30, r12
 28e:	93 81       	ldd	r25, Z+3	; 0x03
 290:	f7 01       	movw	r30, r14
 292:	93 fd       	sbrc	r25, 3
 294:	85 91       	lpm	r24, Z+
 296:	93 ff       	sbrs	r25, 3
 298:	81 91       	ld	r24, Z+
 29a:	7f 01       	movw	r14, r30
 29c:	88 23       	and	r24, r24
 29e:	09 f4       	brne	.+2      	; 0x2a2 <vfprintf+0x62>
 2a0:	ad c1       	rjmp	.+858    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 2a2:	85 32       	cpi	r24, 0x25	; 37
 2a4:	39 f4       	brne	.+14     	; 0x2b4 <vfprintf+0x74>
 2a6:	93 fd       	sbrc	r25, 3
 2a8:	85 91       	lpm	r24, Z+
 2aa:	93 ff       	sbrs	r25, 3
 2ac:	81 91       	ld	r24, Z+
 2ae:	7f 01       	movw	r14, r30
 2b0:	85 32       	cpi	r24, 0x25	; 37
 2b2:	21 f4       	brne	.+8      	; 0x2bc <vfprintf+0x7c>
 2b4:	b6 01       	movw	r22, r12
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	d6 d1       	rcall	.+940    	; 0x666 <fputc>
 2ba:	e8 cf       	rjmp	.-48     	; 0x28c <vfprintf+0x4c>
 2bc:	91 2c       	mov	r9, r1
 2be:	21 2c       	mov	r2, r1
 2c0:	31 2c       	mov	r3, r1
 2c2:	ff e1       	ldi	r31, 0x1F	; 31
 2c4:	f3 15       	cp	r31, r3
 2c6:	d8 f0       	brcs	.+54     	; 0x2fe <vfprintf+0xbe>
 2c8:	8b 32       	cpi	r24, 0x2B	; 43
 2ca:	79 f0       	breq	.+30     	; 0x2ea <vfprintf+0xaa>
 2cc:	38 f4       	brcc	.+14     	; 0x2dc <vfprintf+0x9c>
 2ce:	80 32       	cpi	r24, 0x20	; 32
 2d0:	79 f0       	breq	.+30     	; 0x2f0 <vfprintf+0xb0>
 2d2:	83 32       	cpi	r24, 0x23	; 35
 2d4:	a1 f4       	brne	.+40     	; 0x2fe <vfprintf+0xbe>
 2d6:	23 2d       	mov	r18, r3
 2d8:	20 61       	ori	r18, 0x10	; 16
 2da:	1d c0       	rjmp	.+58     	; 0x316 <vfprintf+0xd6>
 2dc:	8d 32       	cpi	r24, 0x2D	; 45
 2de:	61 f0       	breq	.+24     	; 0x2f8 <vfprintf+0xb8>
 2e0:	80 33       	cpi	r24, 0x30	; 48
 2e2:	69 f4       	brne	.+26     	; 0x2fe <vfprintf+0xbe>
 2e4:	23 2d       	mov	r18, r3
 2e6:	21 60       	ori	r18, 0x01	; 1
 2e8:	16 c0       	rjmp	.+44     	; 0x316 <vfprintf+0xd6>
 2ea:	83 2d       	mov	r24, r3
 2ec:	82 60       	ori	r24, 0x02	; 2
 2ee:	38 2e       	mov	r3, r24
 2f0:	e3 2d       	mov	r30, r3
 2f2:	e4 60       	ori	r30, 0x04	; 4
 2f4:	3e 2e       	mov	r3, r30
 2f6:	2a c0       	rjmp	.+84     	; 0x34c <vfprintf+0x10c>
 2f8:	f3 2d       	mov	r31, r3
 2fa:	f8 60       	ori	r31, 0x08	; 8
 2fc:	1d c0       	rjmp	.+58     	; 0x338 <vfprintf+0xf8>
 2fe:	37 fc       	sbrc	r3, 7
 300:	2d c0       	rjmp	.+90     	; 0x35c <vfprintf+0x11c>
 302:	20 ed       	ldi	r18, 0xD0	; 208
 304:	28 0f       	add	r18, r24
 306:	2a 30       	cpi	r18, 0x0A	; 10
 308:	40 f0       	brcs	.+16     	; 0x31a <vfprintf+0xda>
 30a:	8e 32       	cpi	r24, 0x2E	; 46
 30c:	b9 f4       	brne	.+46     	; 0x33c <vfprintf+0xfc>
 30e:	36 fc       	sbrc	r3, 6
 310:	75 c1       	rjmp	.+746    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 312:	23 2d       	mov	r18, r3
 314:	20 64       	ori	r18, 0x40	; 64
 316:	32 2e       	mov	r3, r18
 318:	19 c0       	rjmp	.+50     	; 0x34c <vfprintf+0x10c>
 31a:	36 fe       	sbrs	r3, 6
 31c:	06 c0       	rjmp	.+12     	; 0x32a <vfprintf+0xea>
 31e:	8a e0       	ldi	r24, 0x0A	; 10
 320:	98 9e       	mul	r9, r24
 322:	20 0d       	add	r18, r0
 324:	11 24       	eor	r1, r1
 326:	92 2e       	mov	r9, r18
 328:	11 c0       	rjmp	.+34     	; 0x34c <vfprintf+0x10c>
 32a:	ea e0       	ldi	r30, 0x0A	; 10
 32c:	2e 9e       	mul	r2, r30
 32e:	20 0d       	add	r18, r0
 330:	11 24       	eor	r1, r1
 332:	22 2e       	mov	r2, r18
 334:	f3 2d       	mov	r31, r3
 336:	f0 62       	ori	r31, 0x20	; 32
 338:	3f 2e       	mov	r3, r31
 33a:	08 c0       	rjmp	.+16     	; 0x34c <vfprintf+0x10c>
 33c:	8c 36       	cpi	r24, 0x6C	; 108
 33e:	21 f4       	brne	.+8      	; 0x348 <vfprintf+0x108>
 340:	83 2d       	mov	r24, r3
 342:	80 68       	ori	r24, 0x80	; 128
 344:	38 2e       	mov	r3, r24
 346:	02 c0       	rjmp	.+4      	; 0x34c <vfprintf+0x10c>
 348:	88 36       	cpi	r24, 0x68	; 104
 34a:	41 f4       	brne	.+16     	; 0x35c <vfprintf+0x11c>
 34c:	f7 01       	movw	r30, r14
 34e:	93 fd       	sbrc	r25, 3
 350:	85 91       	lpm	r24, Z+
 352:	93 ff       	sbrs	r25, 3
 354:	81 91       	ld	r24, Z+
 356:	7f 01       	movw	r14, r30
 358:	81 11       	cpse	r24, r1
 35a:	b3 cf       	rjmp	.-154    	; 0x2c2 <vfprintf+0x82>
 35c:	98 2f       	mov	r25, r24
 35e:	9f 7d       	andi	r25, 0xDF	; 223
 360:	95 54       	subi	r25, 0x45	; 69
 362:	93 30       	cpi	r25, 0x03	; 3
 364:	28 f4       	brcc	.+10     	; 0x370 <vfprintf+0x130>
 366:	0c 5f       	subi	r16, 0xFC	; 252
 368:	1f 4f       	sbci	r17, 0xFF	; 255
 36a:	9f e3       	ldi	r25, 0x3F	; 63
 36c:	99 83       	std	Y+1, r25	; 0x01
 36e:	0d c0       	rjmp	.+26     	; 0x38a <vfprintf+0x14a>
 370:	83 36       	cpi	r24, 0x63	; 99
 372:	31 f0       	breq	.+12     	; 0x380 <vfprintf+0x140>
 374:	83 37       	cpi	r24, 0x73	; 115
 376:	71 f0       	breq	.+28     	; 0x394 <vfprintf+0x154>
 378:	83 35       	cpi	r24, 0x53	; 83
 37a:	09 f0       	breq	.+2      	; 0x37e <vfprintf+0x13e>
 37c:	55 c0       	rjmp	.+170    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 37e:	20 c0       	rjmp	.+64     	; 0x3c0 <vfprintf+0x180>
 380:	f8 01       	movw	r30, r16
 382:	80 81       	ld	r24, Z
 384:	89 83       	std	Y+1, r24	; 0x01
 386:	0e 5f       	subi	r16, 0xFE	; 254
 388:	1f 4f       	sbci	r17, 0xFF	; 255
 38a:	88 24       	eor	r8, r8
 38c:	83 94       	inc	r8
 38e:	91 2c       	mov	r9, r1
 390:	53 01       	movw	r10, r6
 392:	12 c0       	rjmp	.+36     	; 0x3b8 <vfprintf+0x178>
 394:	28 01       	movw	r4, r16
 396:	f2 e0       	ldi	r31, 0x02	; 2
 398:	4f 0e       	add	r4, r31
 39a:	51 1c       	adc	r5, r1
 39c:	f8 01       	movw	r30, r16
 39e:	a0 80       	ld	r10, Z
 3a0:	b1 80       	ldd	r11, Z+1	; 0x01
 3a2:	36 fe       	sbrs	r3, 6
 3a4:	03 c0       	rjmp	.+6      	; 0x3ac <vfprintf+0x16c>
 3a6:	69 2d       	mov	r22, r9
 3a8:	70 e0       	ldi	r23, 0x00	; 0
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <vfprintf+0x170>
 3ac:	6f ef       	ldi	r22, 0xFF	; 255
 3ae:	7f ef       	ldi	r23, 0xFF	; 255
 3b0:	c5 01       	movw	r24, r10
 3b2:	4e d1       	rcall	.+668    	; 0x650 <strnlen>
 3b4:	4c 01       	movw	r8, r24
 3b6:	82 01       	movw	r16, r4
 3b8:	f3 2d       	mov	r31, r3
 3ba:	ff 77       	andi	r31, 0x7F	; 127
 3bc:	3f 2e       	mov	r3, r31
 3be:	15 c0       	rjmp	.+42     	; 0x3ea <vfprintf+0x1aa>
 3c0:	28 01       	movw	r4, r16
 3c2:	22 e0       	ldi	r18, 0x02	; 2
 3c4:	42 0e       	add	r4, r18
 3c6:	51 1c       	adc	r5, r1
 3c8:	f8 01       	movw	r30, r16
 3ca:	a0 80       	ld	r10, Z
 3cc:	b1 80       	ldd	r11, Z+1	; 0x01
 3ce:	36 fe       	sbrs	r3, 6
 3d0:	03 c0       	rjmp	.+6      	; 0x3d8 <vfprintf+0x198>
 3d2:	69 2d       	mov	r22, r9
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <vfprintf+0x19c>
 3d8:	6f ef       	ldi	r22, 0xFF	; 255
 3da:	7f ef       	ldi	r23, 0xFF	; 255
 3dc:	c5 01       	movw	r24, r10
 3de:	2d d1       	rcall	.+602    	; 0x63a <strnlen_P>
 3e0:	4c 01       	movw	r8, r24
 3e2:	f3 2d       	mov	r31, r3
 3e4:	f0 68       	ori	r31, 0x80	; 128
 3e6:	3f 2e       	mov	r3, r31
 3e8:	82 01       	movw	r16, r4
 3ea:	33 fc       	sbrc	r3, 3
 3ec:	19 c0       	rjmp	.+50     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3ee:	82 2d       	mov	r24, r2
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	88 16       	cp	r8, r24
 3f4:	99 06       	cpc	r9, r25
 3f6:	a0 f4       	brcc	.+40     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3f8:	b6 01       	movw	r22, r12
 3fa:	80 e2       	ldi	r24, 0x20	; 32
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	33 d1       	rcall	.+614    	; 0x666 <fputc>
 400:	2a 94       	dec	r2
 402:	f5 cf       	rjmp	.-22     	; 0x3ee <vfprintf+0x1ae>
 404:	f5 01       	movw	r30, r10
 406:	37 fc       	sbrc	r3, 7
 408:	85 91       	lpm	r24, Z+
 40a:	37 fe       	sbrs	r3, 7
 40c:	81 91       	ld	r24, Z+
 40e:	5f 01       	movw	r10, r30
 410:	b6 01       	movw	r22, r12
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	28 d1       	rcall	.+592    	; 0x666 <fputc>
 416:	21 10       	cpse	r2, r1
 418:	2a 94       	dec	r2
 41a:	21 e0       	ldi	r18, 0x01	; 1
 41c:	82 1a       	sub	r8, r18
 41e:	91 08       	sbc	r9, r1
 420:	81 14       	cp	r8, r1
 422:	91 04       	cpc	r9, r1
 424:	79 f7       	brne	.-34     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 426:	e1 c0       	rjmp	.+450    	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 428:	84 36       	cpi	r24, 0x64	; 100
 42a:	11 f0       	breq	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42c:	89 36       	cpi	r24, 0x69	; 105
 42e:	39 f5       	brne	.+78     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 430:	f8 01       	movw	r30, r16
 432:	37 fe       	sbrs	r3, 7
 434:	07 c0       	rjmp	.+14     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 436:	60 81       	ld	r22, Z
 438:	71 81       	ldd	r23, Z+1	; 0x01
 43a:	82 81       	ldd	r24, Z+2	; 0x02
 43c:	93 81       	ldd	r25, Z+3	; 0x03
 43e:	0c 5f       	subi	r16, 0xFC	; 252
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	08 c0       	rjmp	.+16     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 444:	60 81       	ld	r22, Z
 446:	71 81       	ldd	r23, Z+1	; 0x01
 448:	07 2e       	mov	r0, r23
 44a:	00 0c       	add	r0, r0
 44c:	88 0b       	sbc	r24, r24
 44e:	99 0b       	sbc	r25, r25
 450:	0e 5f       	subi	r16, 0xFE	; 254
 452:	1f 4f       	sbci	r17, 0xFF	; 255
 454:	f3 2d       	mov	r31, r3
 456:	ff 76       	andi	r31, 0x6F	; 111
 458:	3f 2e       	mov	r3, r31
 45a:	97 ff       	sbrs	r25, 7
 45c:	09 c0       	rjmp	.+18     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 45e:	90 95       	com	r25
 460:	80 95       	com	r24
 462:	70 95       	com	r23
 464:	61 95       	neg	r22
 466:	7f 4f       	sbci	r23, 0xFF	; 255
 468:	8f 4f       	sbci	r24, 0xFF	; 255
 46a:	9f 4f       	sbci	r25, 0xFF	; 255
 46c:	f0 68       	ori	r31, 0x80	; 128
 46e:	3f 2e       	mov	r3, r31
 470:	2a e0       	ldi	r18, 0x0A	; 10
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	a3 01       	movw	r20, r6
 476:	33 d1       	rcall	.+614    	; 0x6de <__ultoa_invert>
 478:	88 2e       	mov	r8, r24
 47a:	86 18       	sub	r8, r6
 47c:	44 c0       	rjmp	.+136    	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 47e:	85 37       	cpi	r24, 0x75	; 117
 480:	31 f4       	brne	.+12     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 482:	23 2d       	mov	r18, r3
 484:	2f 7e       	andi	r18, 0xEF	; 239
 486:	b2 2e       	mov	r11, r18
 488:	2a e0       	ldi	r18, 0x0A	; 10
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	25 c0       	rjmp	.+74     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 48e:	93 2d       	mov	r25, r3
 490:	99 7f       	andi	r25, 0xF9	; 249
 492:	b9 2e       	mov	r11, r25
 494:	8f 36       	cpi	r24, 0x6F	; 111
 496:	c1 f0       	breq	.+48     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 498:	18 f4       	brcc	.+6      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 49a:	88 35       	cpi	r24, 0x58	; 88
 49c:	79 f0       	breq	.+30     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 49e:	ae c0       	rjmp	.+348    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 4a0:	80 37       	cpi	r24, 0x70	; 112
 4a2:	19 f0       	breq	.+6      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a4:	88 37       	cpi	r24, 0x78	; 120
 4a6:	21 f0       	breq	.+8      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a8:	a9 c0       	rjmp	.+338    	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 4aa:	e9 2f       	mov	r30, r25
 4ac:	e0 61       	ori	r30, 0x10	; 16
 4ae:	be 2e       	mov	r11, r30
 4b0:	b4 fe       	sbrs	r11, 4
 4b2:	0d c0       	rjmp	.+26     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4b4:	fb 2d       	mov	r31, r11
 4b6:	f4 60       	ori	r31, 0x04	; 4
 4b8:	bf 2e       	mov	r11, r31
 4ba:	09 c0       	rjmp	.+18     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4bc:	34 fe       	sbrs	r3, 4
 4be:	0a c0       	rjmp	.+20     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c0:	29 2f       	mov	r18, r25
 4c2:	26 60       	ori	r18, 0x06	; 6
 4c4:	b2 2e       	mov	r11, r18
 4c6:	06 c0       	rjmp	.+12     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c8:	28 e0       	ldi	r18, 0x08	; 8
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	05 c0       	rjmp	.+10     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4ce:	20 e1       	ldi	r18, 0x10	; 16
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4d4:	20 e1       	ldi	r18, 0x10	; 16
 4d6:	32 e0       	ldi	r19, 0x02	; 2
 4d8:	f8 01       	movw	r30, r16
 4da:	b7 fe       	sbrs	r11, 7
 4dc:	07 c0       	rjmp	.+14     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4de:	60 81       	ld	r22, Z
 4e0:	71 81       	ldd	r23, Z+1	; 0x01
 4e2:	82 81       	ldd	r24, Z+2	; 0x02
 4e4:	93 81       	ldd	r25, Z+3	; 0x03
 4e6:	0c 5f       	subi	r16, 0xFC	; 252
 4e8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4ec:	60 81       	ld	r22, Z
 4ee:	71 81       	ldd	r23, Z+1	; 0x01
 4f0:	80 e0       	ldi	r24, 0x00	; 0
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 5f       	subi	r16, 0xFE	; 254
 4f6:	1f 4f       	sbci	r17, 0xFF	; 255
 4f8:	a3 01       	movw	r20, r6
 4fa:	f1 d0       	rcall	.+482    	; 0x6de <__ultoa_invert>
 4fc:	88 2e       	mov	r8, r24
 4fe:	86 18       	sub	r8, r6
 500:	fb 2d       	mov	r31, r11
 502:	ff 77       	andi	r31, 0x7F	; 127
 504:	3f 2e       	mov	r3, r31
 506:	36 fe       	sbrs	r3, 6
 508:	0d c0       	rjmp	.+26     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 50a:	23 2d       	mov	r18, r3
 50c:	2e 7f       	andi	r18, 0xFE	; 254
 50e:	a2 2e       	mov	r10, r18
 510:	89 14       	cp	r8, r9
 512:	58 f4       	brcc	.+22     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 514:	34 fe       	sbrs	r3, 4
 516:	0b c0       	rjmp	.+22     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 518:	32 fc       	sbrc	r3, 2
 51a:	09 c0       	rjmp	.+18     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 51c:	83 2d       	mov	r24, r3
 51e:	8e 7e       	andi	r24, 0xEE	; 238
 520:	a8 2e       	mov	r10, r24
 522:	05 c0       	rjmp	.+10     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 524:	b8 2c       	mov	r11, r8
 526:	a3 2c       	mov	r10, r3
 528:	03 c0       	rjmp	.+6      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52a:	b8 2c       	mov	r11, r8
 52c:	01 c0       	rjmp	.+2      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52e:	b9 2c       	mov	r11, r9
 530:	a4 fe       	sbrs	r10, 4
 532:	0f c0       	rjmp	.+30     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 534:	fe 01       	movw	r30, r28
 536:	e8 0d       	add	r30, r8
 538:	f1 1d       	adc	r31, r1
 53a:	80 81       	ld	r24, Z
 53c:	80 33       	cpi	r24, 0x30	; 48
 53e:	21 f4       	brne	.+8      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 540:	9a 2d       	mov	r25, r10
 542:	99 7e       	andi	r25, 0xE9	; 233
 544:	a9 2e       	mov	r10, r25
 546:	09 c0       	rjmp	.+18     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 548:	a2 fe       	sbrs	r10, 2
 54a:	06 c0       	rjmp	.+12     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54c:	b3 94       	inc	r11
 54e:	b3 94       	inc	r11
 550:	04 c0       	rjmp	.+8      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 552:	8a 2d       	mov	r24, r10
 554:	86 78       	andi	r24, 0x86	; 134
 556:	09 f0       	breq	.+2      	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 558:	b3 94       	inc	r11
 55a:	a3 fc       	sbrc	r10, 3
 55c:	10 c0       	rjmp	.+32     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 55e:	a0 fe       	sbrs	r10, 0
 560:	06 c0       	rjmp	.+12     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 562:	b2 14       	cp	r11, r2
 564:	80 f4       	brcc	.+32     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 566:	28 0c       	add	r2, r8
 568:	92 2c       	mov	r9, r2
 56a:	9b 18       	sub	r9, r11
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56e:	b2 14       	cp	r11, r2
 570:	58 f4       	brcc	.+22     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 572:	b6 01       	movw	r22, r12
 574:	80 e2       	ldi	r24, 0x20	; 32
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	76 d0       	rcall	.+236    	; 0x666 <fputc>
 57a:	b3 94       	inc	r11
 57c:	f8 cf       	rjmp	.-16     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 57e:	b2 14       	cp	r11, r2
 580:	18 f4       	brcc	.+6      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 582:	2b 18       	sub	r2, r11
 584:	02 c0       	rjmp	.+4      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 586:	98 2c       	mov	r9, r8
 588:	21 2c       	mov	r2, r1
 58a:	a4 fe       	sbrs	r10, 4
 58c:	0f c0       	rjmp	.+30     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 58e:	b6 01       	movw	r22, r12
 590:	80 e3       	ldi	r24, 0x30	; 48
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	68 d0       	rcall	.+208    	; 0x666 <fputc>
 596:	a2 fe       	sbrs	r10, 2
 598:	16 c0       	rjmp	.+44     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 59a:	a1 fc       	sbrc	r10, 1
 59c:	03 c0       	rjmp	.+6      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 59e:	88 e7       	ldi	r24, 0x78	; 120
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a4:	88 e5       	ldi	r24, 0x58	; 88
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	b6 01       	movw	r22, r12
 5aa:	0c c0       	rjmp	.+24     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5ac:	8a 2d       	mov	r24, r10
 5ae:	86 78       	andi	r24, 0x86	; 134
 5b0:	51 f0       	breq	.+20     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5b2:	a1 fe       	sbrs	r10, 1
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b6:	8b e2       	ldi	r24, 0x2B	; 43
 5b8:	01 c0       	rjmp	.+2      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5ba:	80 e2       	ldi	r24, 0x20	; 32
 5bc:	a7 fc       	sbrc	r10, 7
 5be:	8d e2       	ldi	r24, 0x2D	; 45
 5c0:	b6 01       	movw	r22, r12
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	50 d0       	rcall	.+160    	; 0x666 <fputc>
 5c6:	89 14       	cp	r8, r9
 5c8:	30 f4       	brcc	.+12     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ca:	b6 01       	movw	r22, r12
 5cc:	80 e3       	ldi	r24, 0x30	; 48
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	4a d0       	rcall	.+148    	; 0x666 <fputc>
 5d2:	9a 94       	dec	r9
 5d4:	f8 cf       	rjmp	.-16     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5d6:	8a 94       	dec	r8
 5d8:	f3 01       	movw	r30, r6
 5da:	e8 0d       	add	r30, r8
 5dc:	f1 1d       	adc	r31, r1
 5de:	80 81       	ld	r24, Z
 5e0:	b6 01       	movw	r22, r12
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	40 d0       	rcall	.+128    	; 0x666 <fputc>
 5e6:	81 10       	cpse	r8, r1
 5e8:	f6 cf       	rjmp	.-20     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ea:	22 20       	and	r2, r2
 5ec:	09 f4       	brne	.+2      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ee:	4e ce       	rjmp	.-868    	; 0x28c <vfprintf+0x4c>
 5f0:	b6 01       	movw	r22, r12
 5f2:	80 e2       	ldi	r24, 0x20	; 32
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	37 d0       	rcall	.+110    	; 0x666 <fputc>
 5f8:	2a 94       	dec	r2
 5fa:	f7 cf       	rjmp	.-18     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5fc:	f6 01       	movw	r30, r12
 5fe:	86 81       	ldd	r24, Z+6	; 0x06
 600:	97 81       	ldd	r25, Z+7	; 0x07
 602:	02 c0       	rjmp	.+4      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 604:	8f ef       	ldi	r24, 0xFF	; 255
 606:	9f ef       	ldi	r25, 0xFF	; 255
 608:	2b 96       	adiw	r28, 0x0b	; 11
 60a:	0f b6       	in	r0, 0x3f	; 63
 60c:	f8 94       	cli
 60e:	de bf       	out	0x3e, r29	; 62
 610:	0f be       	out	0x3f, r0	; 63
 612:	cd bf       	out	0x3d, r28	; 61
 614:	df 91       	pop	r29
 616:	cf 91       	pop	r28
 618:	1f 91       	pop	r17
 61a:	0f 91       	pop	r16
 61c:	ff 90       	pop	r15
 61e:	ef 90       	pop	r14
 620:	df 90       	pop	r13
 622:	cf 90       	pop	r12
 624:	bf 90       	pop	r11
 626:	af 90       	pop	r10
 628:	9f 90       	pop	r9
 62a:	8f 90       	pop	r8
 62c:	7f 90       	pop	r7
 62e:	6f 90       	pop	r6
 630:	5f 90       	pop	r5
 632:	4f 90       	pop	r4
 634:	3f 90       	pop	r3
 636:	2f 90       	pop	r2
 638:	08 95       	ret

0000063a <strnlen_P>:
 63a:	fc 01       	movw	r30, r24
 63c:	05 90       	lpm	r0, Z+
 63e:	61 50       	subi	r22, 0x01	; 1
 640:	70 40       	sbci	r23, 0x00	; 0
 642:	01 10       	cpse	r0, r1
 644:	d8 f7       	brcc	.-10     	; 0x63c <strnlen_P+0x2>
 646:	80 95       	com	r24
 648:	90 95       	com	r25
 64a:	8e 0f       	add	r24, r30
 64c:	9f 1f       	adc	r25, r31
 64e:	08 95       	ret

00000650 <strnlen>:
 650:	fc 01       	movw	r30, r24
 652:	61 50       	subi	r22, 0x01	; 1
 654:	70 40       	sbci	r23, 0x00	; 0
 656:	01 90       	ld	r0, Z+
 658:	01 10       	cpse	r0, r1
 65a:	d8 f7       	brcc	.-10     	; 0x652 <strnlen+0x2>
 65c:	80 95       	com	r24
 65e:	90 95       	com	r25
 660:	8e 0f       	add	r24, r30
 662:	9f 1f       	adc	r25, r31
 664:	08 95       	ret

00000666 <fputc>:
 666:	0f 93       	push	r16
 668:	1f 93       	push	r17
 66a:	cf 93       	push	r28
 66c:	df 93       	push	r29
 66e:	fb 01       	movw	r30, r22
 670:	23 81       	ldd	r18, Z+3	; 0x03
 672:	21 fd       	sbrc	r18, 1
 674:	03 c0       	rjmp	.+6      	; 0x67c <fputc+0x16>
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	9f ef       	ldi	r25, 0xFF	; 255
 67a:	2c c0       	rjmp	.+88     	; 0x6d4 <fputc+0x6e>
 67c:	22 ff       	sbrs	r18, 2
 67e:	16 c0       	rjmp	.+44     	; 0x6ac <fputc+0x46>
 680:	46 81       	ldd	r20, Z+6	; 0x06
 682:	57 81       	ldd	r21, Z+7	; 0x07
 684:	24 81       	ldd	r18, Z+4	; 0x04
 686:	35 81       	ldd	r19, Z+5	; 0x05
 688:	42 17       	cp	r20, r18
 68a:	53 07       	cpc	r21, r19
 68c:	44 f4       	brge	.+16     	; 0x69e <fputc+0x38>
 68e:	a0 81       	ld	r26, Z
 690:	b1 81       	ldd	r27, Z+1	; 0x01
 692:	9d 01       	movw	r18, r26
 694:	2f 5f       	subi	r18, 0xFF	; 255
 696:	3f 4f       	sbci	r19, 0xFF	; 255
 698:	31 83       	std	Z+1, r19	; 0x01
 69a:	20 83       	st	Z, r18
 69c:	8c 93       	st	X, r24
 69e:	26 81       	ldd	r18, Z+6	; 0x06
 6a0:	37 81       	ldd	r19, Z+7	; 0x07
 6a2:	2f 5f       	subi	r18, 0xFF	; 255
 6a4:	3f 4f       	sbci	r19, 0xFF	; 255
 6a6:	37 83       	std	Z+7, r19	; 0x07
 6a8:	26 83       	std	Z+6, r18	; 0x06
 6aa:	14 c0       	rjmp	.+40     	; 0x6d4 <fputc+0x6e>
 6ac:	8b 01       	movw	r16, r22
 6ae:	ec 01       	movw	r28, r24
 6b0:	fb 01       	movw	r30, r22
 6b2:	00 84       	ldd	r0, Z+8	; 0x08
 6b4:	f1 85       	ldd	r31, Z+9	; 0x09
 6b6:	e0 2d       	mov	r30, r0
 6b8:	09 95       	icall
 6ba:	89 2b       	or	r24, r25
 6bc:	e1 f6       	brne	.-72     	; 0x676 <fputc+0x10>
 6be:	d8 01       	movw	r26, r16
 6c0:	16 96       	adiw	r26, 0x06	; 6
 6c2:	8d 91       	ld	r24, X+
 6c4:	9c 91       	ld	r25, X
 6c6:	17 97       	sbiw	r26, 0x07	; 7
 6c8:	01 96       	adiw	r24, 0x01	; 1
 6ca:	17 96       	adiw	r26, 0x07	; 7
 6cc:	9c 93       	st	X, r25
 6ce:	8e 93       	st	-X, r24
 6d0:	16 97       	sbiw	r26, 0x06	; 6
 6d2:	ce 01       	movw	r24, r28
 6d4:	df 91       	pop	r29
 6d6:	cf 91       	pop	r28
 6d8:	1f 91       	pop	r17
 6da:	0f 91       	pop	r16
 6dc:	08 95       	ret

000006de <__ultoa_invert>:
 6de:	fa 01       	movw	r30, r20
 6e0:	aa 27       	eor	r26, r26
 6e2:	28 30       	cpi	r18, 0x08	; 8
 6e4:	51 f1       	breq	.+84     	; 0x73a <__ultoa_invert+0x5c>
 6e6:	20 31       	cpi	r18, 0x10	; 16
 6e8:	81 f1       	breq	.+96     	; 0x74a <__ultoa_invert+0x6c>
 6ea:	e8 94       	clt
 6ec:	6f 93       	push	r22
 6ee:	6e 7f       	andi	r22, 0xFE	; 254
 6f0:	6e 5f       	subi	r22, 0xFE	; 254
 6f2:	7f 4f       	sbci	r23, 0xFF	; 255
 6f4:	8f 4f       	sbci	r24, 0xFF	; 255
 6f6:	9f 4f       	sbci	r25, 0xFF	; 255
 6f8:	af 4f       	sbci	r26, 0xFF	; 255
 6fa:	b1 e0       	ldi	r27, 0x01	; 1
 6fc:	3e d0       	rcall	.+124    	; 0x77a <__ultoa_invert+0x9c>
 6fe:	b4 e0       	ldi	r27, 0x04	; 4
 700:	3c d0       	rcall	.+120    	; 0x77a <__ultoa_invert+0x9c>
 702:	67 0f       	add	r22, r23
 704:	78 1f       	adc	r23, r24
 706:	89 1f       	adc	r24, r25
 708:	9a 1f       	adc	r25, r26
 70a:	a1 1d       	adc	r26, r1
 70c:	68 0f       	add	r22, r24
 70e:	79 1f       	adc	r23, r25
 710:	8a 1f       	adc	r24, r26
 712:	91 1d       	adc	r25, r1
 714:	a1 1d       	adc	r26, r1
 716:	6a 0f       	add	r22, r26
 718:	71 1d       	adc	r23, r1
 71a:	81 1d       	adc	r24, r1
 71c:	91 1d       	adc	r25, r1
 71e:	a1 1d       	adc	r26, r1
 720:	20 d0       	rcall	.+64     	; 0x762 <__ultoa_invert+0x84>
 722:	09 f4       	brne	.+2      	; 0x726 <__ultoa_invert+0x48>
 724:	68 94       	set
 726:	3f 91       	pop	r19
 728:	2a e0       	ldi	r18, 0x0A	; 10
 72a:	26 9f       	mul	r18, r22
 72c:	11 24       	eor	r1, r1
 72e:	30 19       	sub	r19, r0
 730:	30 5d       	subi	r19, 0xD0	; 208
 732:	31 93       	st	Z+, r19
 734:	de f6       	brtc	.-74     	; 0x6ec <__ultoa_invert+0xe>
 736:	cf 01       	movw	r24, r30
 738:	08 95       	ret
 73a:	46 2f       	mov	r20, r22
 73c:	47 70       	andi	r20, 0x07	; 7
 73e:	40 5d       	subi	r20, 0xD0	; 208
 740:	41 93       	st	Z+, r20
 742:	b3 e0       	ldi	r27, 0x03	; 3
 744:	0f d0       	rcall	.+30     	; 0x764 <__ultoa_invert+0x86>
 746:	c9 f7       	brne	.-14     	; 0x73a <__ultoa_invert+0x5c>
 748:	f6 cf       	rjmp	.-20     	; 0x736 <__ultoa_invert+0x58>
 74a:	46 2f       	mov	r20, r22
 74c:	4f 70       	andi	r20, 0x0F	; 15
 74e:	40 5d       	subi	r20, 0xD0	; 208
 750:	4a 33       	cpi	r20, 0x3A	; 58
 752:	18 f0       	brcs	.+6      	; 0x75a <__ultoa_invert+0x7c>
 754:	49 5d       	subi	r20, 0xD9	; 217
 756:	31 fd       	sbrc	r19, 1
 758:	40 52       	subi	r20, 0x20	; 32
 75a:	41 93       	st	Z+, r20
 75c:	02 d0       	rcall	.+4      	; 0x762 <__ultoa_invert+0x84>
 75e:	a9 f7       	brne	.-22     	; 0x74a <__ultoa_invert+0x6c>
 760:	ea cf       	rjmp	.-44     	; 0x736 <__ultoa_invert+0x58>
 762:	b4 e0       	ldi	r27, 0x04	; 4
 764:	a6 95       	lsr	r26
 766:	97 95       	ror	r25
 768:	87 95       	ror	r24
 76a:	77 95       	ror	r23
 76c:	67 95       	ror	r22
 76e:	ba 95       	dec	r27
 770:	c9 f7       	brne	.-14     	; 0x764 <__ultoa_invert+0x86>
 772:	00 97       	sbiw	r24, 0x00	; 0
 774:	61 05       	cpc	r22, r1
 776:	71 05       	cpc	r23, r1
 778:	08 95       	ret
 77a:	9b 01       	movw	r18, r22
 77c:	ac 01       	movw	r20, r24
 77e:	0a 2e       	mov	r0, r26
 780:	06 94       	lsr	r0
 782:	57 95       	ror	r21
 784:	47 95       	ror	r20
 786:	37 95       	ror	r19
 788:	27 95       	ror	r18
 78a:	ba 95       	dec	r27
 78c:	c9 f7       	brne	.-14     	; 0x780 <__ultoa_invert+0xa2>
 78e:	62 0f       	add	r22, r18
 790:	73 1f       	adc	r23, r19
 792:	84 1f       	adc	r24, r20
 794:	95 1f       	adc	r25, r21
 796:	a0 1d       	adc	r26, r0
 798:	08 95       	ret

0000079a <_exit>:
 79a:	f8 94       	cli

0000079c <__stop_program>:
 79c:	ff cf       	rjmp	.-2      	; 0x79c <__stop_program>
